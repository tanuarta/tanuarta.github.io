{"ast":null,"code":"var _jsxFileName = \"/home/roan/tanuarta.github.io/tanuarta/src/Pages/TicTacToe.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport '../TicTacToe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [board, setBoard] = useState(Array(3).fill('').map(() => Array(3).fill('')));\n  const [turn, setTurn] = useState('X');\n  const [turnQueue, setQueue] = useState([]);\n\n  // Check row, column, diagonals of latest move\n  // Verify all corresponding squares are equal\n  const checkWin = (xIndex, yIndex) => {\n    console.log('Checking Win');\n    console.log('x = ' + xIndex);\n    console.log('y = ' + yIndex);\n\n    // Check if row is a win\n    for (let y = 0; y < board.length; y++) {\n      if (board[xIndex][y] !== turn) break;else if (y === board.length - 1) return true;\n    }\n\n    // Check if column is a win\n    for (let x = 0; x < board.length; x++) {\n      if (board[x][yIndex] !== turn) break;else if (x === board.length - 1) return true;\n    }\n\n    // Check diagonal\n    if (xIndex === yIndex) {\n      for (let a = 0; a < board.length; a++) {\n        if (board[a][a] !== turn) break;else if (a === board.length - 1) return true;\n      }\n    }\n\n    // Check anti-diagonal\n    if (parseInt(xIndex) + parseInt(yIndex) === 2) {\n      for (let a = 0; a < board.length; a++) {\n        if (board[a][2 - a] !== turn) break;else if (a === board.length - 1) return true;\n      }\n    }\n    return false;\n  };\n\n  // Clear move that has opacity at 50% before clearing everything else\n  const reset = () => {\n    let queue = [...turnQueue];\n    const removeTurn = queue.shift();\n    let box = document.getElementById(removeTurn[0] + removeTurn[1]);\n    box.className = 'box';\n    setQueue([]);\n    setTurn('X');\n    setBoard(Array(3).fill('').map(() => Array(3).fill('')));\n  };\n  const move = e => {\n    const xIndex = e.target.getAttribute('x-index');\n    const yIndex = e.target.getAttribute('y-index');\n\n    // Prevent clicking on occupied square\n    if (board[xIndex][yIndex] !== '') return;\n\n    // Create shallow copies to change state\n    let newBoard = [...board];\n    let queue = [...turnQueue];\n    newBoard[xIndex][yIndex] = turn;\n\n    // Change opacity of next cleared square\n    if (queue.length === 5) {\n      const xCord = queue[0][0];\n      const yCord = queue[0][1];\n      let box = document.getElementById(xCord + yCord);\n      box.className = box.className + ' to-go';\n    }\n\n    // Remove a move, and return opacity back to normal\n    if (queue.length > 5) {\n      const removeTurn = queue.shift();\n      newBoard[removeTurn[0]][removeTurn[1]] = '';\n      const xCord = queue[0][0];\n      const yCord = queue[0][1];\n      let box = document.getElementById(xCord + yCord);\n      box.className = box.className + ' to-go';\n      box = document.getElementById(removeTurn[0] + removeTurn[1]);\n      console.log(box);\n      box.className = 'box';\n    }\n    setBoard(newBoard);\n    queue.push([xIndex, yIndex]);\n    setQueue(queue);\n    if (checkWin(xIndex, yIndex)) {\n      alert('You Win!');\n    }\n    if (turn === 'X') setTurn('O');else setTurn('X');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"title\",\n      children: \"TicTacToe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"turn-text\",\n      children: [\"It's \", turn, \"'s' turn\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((content, x) => content.map((symbol, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        onClick: move,\n        id: x.toString() + y.toString(),\n        \"x-index\": x,\n        \"y-index\": y,\n        children: symbol\n      }, x.toString() + y.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: reset,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"iqMO5o947pXWw41++FOosb7S2l4=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","map","turn","setTurn","turnQueue","setQueue","checkWin","xIndex","yIndex","console","log","y","length","x","a","parseInt","reset","queue","removeTurn","shift","box","document","getElementById","className","move","e","target","getAttribute","newBoard","xCord","yCord","push","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","content","symbol","onClick","id","toString","_c","$RefreshReg$"],"sources":["/home/roan/tanuarta.github.io/tanuarta/src/Pages/TicTacToe.js"],"sourcesContent":["import { useState } from 'react';\nimport '../TicTacToe.css';\n\nfunction TicTacToe() {\n\n  const [board, setBoard] = useState(Array(3).fill('').map(() => Array(3).fill('')));\n  const [turn, setTurn] = useState('X')\n  const [turnQueue, setQueue] = useState([])\n\n  // Check row, column, diagonals of latest move\n  // Verify all corresponding squares are equal\n  const checkWin = (xIndex, yIndex) => {\n    console.log('Checking Win')\n    console.log('x = ' + xIndex)\n    console.log('y = ' + yIndex)\n\n    // Check if row is a win\n    for (let y = 0; y < board.length; y++) {\n      if (board[xIndex][y] !== turn) break;\n      else if (y === board.length - 1) return true; \n    }\n\n    // Check if column is a win\n    for (let x = 0; x < board.length; x++) {\n      if (board[x][yIndex] !== turn) break;\n      else if (x === board.length - 1) return true;\n    }\n\n    // Check diagonal\n    if (xIndex === yIndex) {\n      for (let a = 0; a < board.length; a++) {\n        if (board[a][a] !== turn) break;\n        else if (a === board.length - 1) return true;\n      }\n    }\n\n    // Check anti-diagonal\n    if (parseInt(xIndex) + parseInt(yIndex) === 2) {\n      for (let a = 0; a < board.length; a++) {\n        if (board[a][2 - a] !== turn) break;\n        else if (a === board.length - 1) return true; \n      }\n    }\n\n    return false\n  }\n\n  // Clear move that has opacity at 50% before clearing everything else\n  const reset = () => {\n    let queue = [...turnQueue]\n\n    const removeTurn = queue.shift()\n    let box = document.getElementById(removeTurn[0] + removeTurn[1])\n    box.className = 'box'\n    \n    setQueue([])\n    setTurn('X')\n    setBoard(Array(3).fill('').map(() => Array(3).fill('')))\n    \n  }\n \n  const move = (e) => {\n    const xIndex = e.target.getAttribute('x-index');\n    const yIndex = e.target.getAttribute('y-index');\n\n    // Prevent clicking on occupied square\n    if (board[xIndex][yIndex] !== '') return\n    \n    \n    // Create shallow copies to change state\n    let newBoard = [...board]\n    let queue = [...turnQueue]\n    newBoard[xIndex][yIndex] = turn\n\n    // Change opacity of next cleared square\n    if (queue.length === 5) {\n      const xCord = queue[0][0]\n      const yCord = queue[0][1]\n\n      let box = document.getElementById(xCord + yCord)\n      box.className = box.className + ' to-go'\n    }\n\n    // Remove a move, and return opacity back to normal\n    if (queue.length > 5) {\n      const removeTurn = queue.shift()\n      newBoard[removeTurn[0]][removeTurn[1]] = ''\n\n      const xCord = queue[0][0]\n      const yCord = queue[0][1]\n\n      let box = document.getElementById(xCord + yCord)\n      box.className = box.className + ' to-go'\n\n      box = document.getElementById(removeTurn[0] + removeTurn[1])\n      console.log(box)\n      box.className = 'box'\n    }\n    \n    setBoard(newBoard)\n    queue.push([xIndex, yIndex])\n    setQueue(queue)\n\n    if (checkWin(xIndex, yIndex)) {\n      alert('You Win!');\n    }\n\n    if (turn === 'X') setTurn('O');\n    else setTurn('X')\n  }\n\n  return (\n    <div className=\"main\">\n\n      <span className='title'>\n        TicTacToe\n      </span>\n\n      <span className='turn-text'>\n        It's {turn}'s' turn\n      </span>\n\n      <div className='board'>\n        {\n          board.map((content, x) =>\n            content.map((symbol, y) => \n              <div className='box' onClick={move} id={x.toString() + y.toString()} key={x.toString() + y.toString()} x-index={x} y-index={y}>{symbol}</div>\n            )\n          )\n        }\n      </div>\n\n      <button className='reset-button' onClick={reset}>Reset</button>\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}