{"ast":null,"code":"import bezier from 'bezier-easing';\nvar Limits = function Limits(properties) {\n  this.startX = properties.startX;\n  this.startY = properties.startY;\n  this.endX = properties.endX;\n  this.endY = properties.endY; // Used to calculate the progress of the element\n\n  this.totalX = this.endX - this.startX;\n  this.totalY = this.endY - this.startY; // Used to scale translate effects\n\n  this.startMultiplierX = properties.startMultiplierX || 1;\n  this.endMultiplierX = properties.endMultiplierX || 1;\n  this.startMultiplierY = properties.startMultiplierY || 1;\n  this.endMultiplierY = properties.endMultiplierY || 1;\n};\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ValidCSSEffects;\n(function (ValidCSSEffects) {\n  ValidCSSEffects[\"speed\"] = \"speed\";\n  ValidCSSEffects[\"translateX\"] = \"translateX\";\n  ValidCSSEffects[\"translateY\"] = \"translateY\";\n  ValidCSSEffects[\"rotate\"] = \"rotate\";\n  ValidCSSEffects[\"rotateX\"] = \"rotateX\";\n  ValidCSSEffects[\"rotateY\"] = \"rotateY\";\n  ValidCSSEffects[\"rotateZ\"] = \"rotateZ\";\n  ValidCSSEffects[\"scale\"] = \"scale\";\n  ValidCSSEffects[\"scaleX\"] = \"scaleX\";\n  ValidCSSEffects[\"scaleY\"] = \"scaleY\";\n  ValidCSSEffects[\"scaleZ\"] = \"scaleZ\";\n  ValidCSSEffects[\"opacity\"] = \"opacity\";\n})(ValidCSSEffects || (ValidCSSEffects = {}));\nvar Units;\n(function (Units) {\n  Units[\"px\"] = \"px\";\n  Units[\"%\"] = \"%\";\n  Units[\"vh\"] = \"vh\";\n  Units[\"vw\"] = \"vw\";\n})(Units || (Units = {}));\nvar RotationUnits;\n(function (RotationUnits) {\n  RotationUnits[\"deg\"] = \"deg\";\n  RotationUnits[\"turn\"] = \"turn\";\n  RotationUnits[\"rad\"] = \"rad\";\n})(RotationUnits || (RotationUnits = {}));\nvar ScaleUnits;\n(function (ScaleUnits) {\n  ScaleUnits[\"\"] = \"\";\n})(ScaleUnits || (ScaleUnits = {}));\nvar ScrollAxis;\n(function (ScrollAxis) {\n  ScrollAxis[\"vertical\"] = \"vertical\";\n  ScrollAxis[\"horizontal\"] = \"horizontal\";\n})(ScrollAxis || (ScrollAxis = {}));\nvar EasingPreset;\n(function (EasingPreset) {\n  EasingPreset[\"ease\"] = \"ease\";\n  EasingPreset[\"easeIn\"] = \"easeIn\";\n  EasingPreset[\"easeOut\"] = \"easeOut\";\n  EasingPreset[\"easeInOut\"] = \"easeInOut\";\n  EasingPreset[\"easeInQuad\"] = \"easeInQuad\";\n  EasingPreset[\"easeInCubic\"] = \"easeInCubic\";\n  EasingPreset[\"easeInQuart\"] = \"easeInQuart\";\n  EasingPreset[\"easeInQuint\"] = \"easeInQuint\";\n  EasingPreset[\"easeInSine\"] = \"easeInSine\";\n  EasingPreset[\"easeInExpo\"] = \"easeInExpo\";\n  EasingPreset[\"easeInCirc\"] = \"easeInCirc\";\n  EasingPreset[\"easeOutQuad\"] = \"easeOutQuad\";\n  EasingPreset[\"easeOutCubic\"] = \"easeOutCubic\";\n  EasingPreset[\"easeOutQuart\"] = \"easeOutQuart\";\n  EasingPreset[\"easeOutQuint\"] = \"easeOutQuint\";\n  EasingPreset[\"easeOutSine\"] = \"easeOutSine\";\n  EasingPreset[\"easeOutExpo\"] = \"easeOutExpo\";\n  EasingPreset[\"easeOutCirc\"] = \"easeOutCirc\";\n  EasingPreset[\"easeInOutQuad\"] = \"easeInOutQuad\";\n  EasingPreset[\"easeInOutCubic\"] = \"easeInOutCubic\";\n  EasingPreset[\"easeInOutQuart\"] = \"easeInOutQuart\";\n  EasingPreset[\"easeInOutQuint\"] = \"easeInOutQuint\";\n  EasingPreset[\"easeInOutSine\"] = \"easeInOutSine\";\n  EasingPreset[\"easeInOutExpo\"] = \"easeInOutExpo\";\n  EasingPreset[\"easeInOutCirc\"] = \"easeInOutCirc\";\n  EasingPreset[\"easeInBack\"] = \"easeInBack\";\n  EasingPreset[\"easeOutBack\"] = \"easeOutBack\";\n  EasingPreset[\"easeInOutBack\"] = \"easeInOutBack\";\n})(EasingPreset || (EasingPreset = {}));\n\n/**\r\n * Creates a unique id to distinguish parallax elements.\r\n */\nvar id = 0;\nfunction createId() {\n  ++id;\n  return id;\n}\nvar Rect = /*#__PURE__*/function () {\n  function Rect(options) {\n    var rect = options.el.getBoundingClientRect(); // rect is based on viewport -- must adjust for relative scroll container\n\n    if (options.view.scrollContainer) {\n      var scrollRect = options.view.scrollContainer.getBoundingClientRect();\n      rect = _extends({}, rect, {\n        top: rect.top - scrollRect.top,\n        right: rect.right - scrollRect.left,\n        bottom: rect.bottom - scrollRect.top,\n        left: rect.left - scrollRect.left\n      });\n    }\n    this.height = options.el.offsetHeight;\n    this.width = options.el.offsetWidth;\n    this.left = rect.left;\n    this.right = rect.right;\n    this.top = rect.top;\n    this.bottom = rect.bottom;\n    if (options.rootMargin) {\n      this._setRectWithRootMargin(options.rootMargin);\n    }\n  }\n  /**\r\n   * Apply root margin to all properties\r\n   */\n\n  var _proto = Rect.prototype;\n  _proto._setRectWithRootMargin = function _setRectWithRootMargin(rootMargin) {\n    var totalRootY = rootMargin.top + rootMargin.bottom;\n    var totalRootX = rootMargin.left + rootMargin.right;\n    this.top -= rootMargin.top;\n    this.right += rootMargin.right;\n    this.bottom += rootMargin.bottom;\n    this.left -= rootMargin.left;\n    this.height += totalRootY;\n    this.width += totalRootX;\n  };\n  return Rect;\n}();\nvar VALID_UNITS = [ScaleUnits[''], Units.px, Units['%'], Units['vh'], Units['vw'], RotationUnits.deg, RotationUnits.turn, RotationUnits.rad];\n/**\r\n * Determines the unit of a string and parses the value\r\n */\n\nfunction parseValueAndUnit(str, defaultUnit) {\n  if (defaultUnit === void 0) {\n    defaultUnit = Units['%'];\n  }\n  var out = {\n    value: 0,\n    unit: defaultUnit\n  };\n  if (typeof str === 'undefined') return out;\n  var isValid = typeof str === 'number' || typeof str === 'string';\n  if (!isValid) {\n    throw new Error('Invalid value provided. Must provide a value as a string or number');\n  }\n  str = String(str);\n  out.value = parseFloat(str); // @ts-ignore\n\n  out.unit = str.match(/[\\d.\\-+]*\\s*(.*)/)[1] || defaultUnit; // @ts-expect-error\n\n  var isValidUnit = VALID_UNITS.includes(out.unit);\n  if (!isValidUnit) {\n    throw new Error('Invalid unit provided.');\n  }\n  return out;\n}\nvar easingPresets = {\n  ease: [0.25, 0.1, 0.25, 1.0],\n  easeIn: [0.42, 0.0, 1.0, 1.0],\n  easeOut: [0.0, 0.0, 0.58, 1.0],\n  easeInOut: [0.42, 0.0, 0.58, 1.0],\n  /* Ease IN curves */\n  easeInQuad: [0.55, 0.085, 0.68, 0.53],\n  easeInCubic: [0.55, 0.055, 0.675, 0.19],\n  easeInQuart: [0.895, 0.03, 0.685, 0.22],\n  easeInQuint: [0.755, 0.05, 0.855, 0.06],\n  easeInSine: [0.47, 0.0, 0.745, 0.715],\n  easeInExpo: [0.95, 0.05, 0.795, 0.035],\n  easeInCirc: [0.6, 0.04, 0.98, 0.335],\n  /* Ease Out Curves */\n  easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n  easeOutCubic: [0.215, 0.61, 0.355, 1.0],\n  easeOutQuart: [0.165, 0.84, 0.44, 1.0],\n  easeOutQuint: [0.23, 1.0, 0.32, 1.0],\n  easeOutSine: [0.39, 0.575, 0.565, 1.0],\n  easeOutExpo: [0.19, 1.0, 0.22, 1.0],\n  easeOutCirc: [0.075, 0.82, 0.165, 1.0],\n  /* Ease IN Out Curves */\n  easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n  easeInOutCubic: [0.645, 0.045, 0.355, 1.0],\n  easeInOutQuart: [0.77, 0.0, 0.175, 1.0],\n  easeInOutQuint: [0.86, 0.0, 0.07, 1.0],\n  easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n  easeInOutExpo: [1.0, 0.0, 0.0, 1.0],\n  easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n  /* Ease Bounce Curves */\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n};\nfunction createEasingFunction(easing) {\n  if (Array.isArray(easing)) {\n    return bezier(easing[0], easing[1], easing[2], easing[3]);\n  }\n  if (typeof easing === 'string' && typeof easingPresets[easing] !== 'undefined') {\n    var params = easingPresets[easing];\n    return bezier(params[0], params[1], params[2], params[3]);\n  }\n  return;\n}\nvar PARALLAX_EFFECTS = /*#__PURE__*/Object.values(ValidCSSEffects);\nvar MAP_EFFECT_TO_DEFAULT_UNIT = {\n  speed: 'px',\n  translateX: '%',\n  translateY: '%',\n  rotate: 'deg',\n  rotateX: 'deg',\n  rotateY: 'deg',\n  rotateZ: 'deg',\n  scale: '',\n  scaleX: '',\n  scaleY: '',\n  scaleZ: '',\n  opacity: ''\n};\n/**\r\n * Takes a parallax element effects and parses the properties to get the start and end values and units.\r\n */\n\nfunction parseElementTransitionEffects(props, scrollAxis) {\n  var parsedEffects = {};\n  PARALLAX_EFFECTS.forEach(function (key) {\n    var defaultValue = MAP_EFFECT_TO_DEFAULT_UNIT[key]; // If the provided type is a number, this must be the speed prop\n    // in which case we need to construct the proper translate config\n\n    if (typeof (props == null ? void 0 : props[key]) === 'number') {\n      var value = props == null ? void 0 : props[key];\n      var startSpeed = (value || 0) * 10 + \"px\";\n      var endSpeed = (value || 0) * -10 + \"px\";\n      var startParsed = parseValueAndUnit(startSpeed);\n      var endParsed = parseValueAndUnit(endSpeed);\n      var speedConfig = {\n        start: startParsed.value,\n        end: endParsed.value,\n        unit: startParsed.unit\n      }; // Manually set translate y value\n\n      if (scrollAxis === ScrollAxis.vertical) {\n        parsedEffects.translateY = speedConfig;\n      } // Manually set translate y value\n\n      if (scrollAxis === ScrollAxis.horizontal) {\n        parsedEffects.translateX = speedConfig;\n      }\n    } // The rest are standard effect being parsed\n\n    if (Array.isArray(props == null ? void 0 : props[key])) {\n      var _value = props == null ? void 0 : props[key];\n      if (typeof _value[0] !== 'undefined' && typeof _value[1] !== 'undefined') {\n        var _startParsed = parseValueAndUnit(_value == null ? void 0 : _value[0], defaultValue);\n        var _endParsed = parseValueAndUnit(_value == null ? void 0 : _value[1], defaultValue);\n        var easing = createEasingFunction(_value == null ? void 0 : _value[2]);\n        parsedEffects[key] = {\n          start: _startParsed.value,\n          end: _endParsed.value,\n          unit: _startParsed.unit,\n          easing: easing\n        };\n        if (_startParsed.unit !== _endParsed.unit) {\n          throw new Error('Must provide matching units for the min and max offset values of each axis.');\n        }\n      }\n    }\n  });\n  return parsedEffects;\n}\n\n/**\r\n * Returns the percent (0 - 100) moved based on position in the viewport\r\n */\nfunction getProgressAmount(\n/*\r\n * The start value from cache\r\n */\nstart,\n/*\r\n * total dist the element has to move to be 100% complete (view width/height + element width/height)\r\n */\ntotalDist,\n/*\r\n * Current scroll value\r\n */\ncurrentScroll,\n/*\r\n * an optional easing function to apply\r\n */\neasing) {\n  // adjust cached value\n  var startAdjustedScroll = currentScroll - start; // Amount the element has moved based on current and total distance to move\n\n  var amount = startAdjustedScroll / totalDist; // Apply bezier easing if provided\n\n  if (easing) {\n    amount = easing(amount);\n  }\n  return amount;\n}\n\n/**\r\n * Takes two values (start, end) and returns whether the current scroll is within range\r\n * @param {number} start - start of scroll (x/y)\r\n * @param {number} end - end of scroll (x/y)\r\n * @param {number} scroll - current scroll (x/y)\r\n * @return {boolean} isInView\r\n */\nfunction isElementInView(start, end, scroll) {\n  var isInView = scroll >= start && scroll <= end;\n  return isInView;\n}\n\n// Scale between AKA normalize\nfunction scaleBetween(value, newMin, newMax, oldMin, oldMax) {\n  return (newMax - newMin) * (value - oldMin) / (oldMax - oldMin) + newMin;\n}\n\n/**\r\n * Scales a start and end value of an effect based on percent moved and easing function\r\n */\n\nfunction scaleEffectByProgress(effect, progress) {\n  var value = scaleBetween(typeof effect.easing === 'function' ? effect.easing(progress) : progress, (effect == null ? void 0 : effect.start) || 0, (effect == null ? void 0 : effect.end) || 0, 0, 1);\n  return {\n    value: value,\n    unit: effect == null ? void 0 : effect.unit\n  };\n}\nvar TRANSFORM_EFFECTS = /*#__PURE__*/Object.values(ValidCSSEffects).filter(function (v) {\n  return v !== 'opacity';\n});\nfunction setWillChangeStyles(el, effects) {\n  var keys = Object.keys(effects);\n  var hasOpacity = keys.includes('opacity');\n  var willChange = \"transform\" + (hasOpacity ? ',opacity' : '');\n  el.style.willChange = willChange;\n}\nfunction setElementStyles(effects, progress, el) {\n  if (!el) return;\n  var transform = getTransformStyles(effects, progress);\n  var opacity = getOpacityStyles(effects, progress);\n  el.style.transform = transform;\n  el.style.opacity = opacity;\n}\nfunction getOpacityStyles(effects, progress) {\n  var scaledOpacity = effects['opacity'] && scaleEffectByProgress(effects['opacity'], progress);\n  if (typeof scaledOpacity === 'undefined' || typeof scaledOpacity.value === 'undefined' || typeof scaledOpacity.unit === 'undefined') {\n    return '';\n  }\n  var styleStr = \"\" + scaledOpacity.value;\n  return styleStr;\n}\nfunction getTransformStyles(effects, progress) {\n  var transform = TRANSFORM_EFFECTS.reduce(function (acc, key) {\n    var scaledEffect =\n    // @ts-expect-error\n    effects[key] && scaleEffectByProgress(effects[key], progress);\n    if (typeof scaledEffect === 'undefined' || typeof scaledEffect.value === 'undefined' || typeof scaledEffect.unit === 'undefined') {\n      return acc;\n    }\n    var styleStr = key + \"(\" + scaledEffect.value + scaledEffect.unit + \")\";\n    return acc + styleStr;\n  }, '');\n  return transform;\n}\n/**\r\n * Takes a parallax element and removes parallax offset styles.\r\n * @param {object} element\r\n */\n\nfunction resetStyles(element) {\n  var el = element.el;\n  if (!el) return;\n  el.style.transform = '';\n  el.style.opacity = '';\n}\nfunction createLimitsForRelativeElements(rect, view, scroll, shouldAlwaysCompleteAnimation) {\n  var startY = rect.top - view.height;\n  var startX = rect.left - view.width;\n  var endY = rect.bottom;\n  var endX = rect.right; // add scroll\n\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y;\n  if (shouldAlwaysCompleteAnimation) {\n    if (scroll.y + rect.top < view.height) {\n      startY = 0;\n    }\n    if (scroll.x + rect.left < view.width) {\n      startX = 0;\n    }\n    if (endY > view.scrollHeight - view.height) {\n      endY = view.scrollHeight - view.height;\n    }\n    if (endX > view.scrollWidth - view.width) {\n      endX = view.scrollWidth - view.width;\n    }\n  }\n  var limits = new Limits({\n    startX: startX,\n    startY: startY,\n    endX: endX,\n    endY: endY\n  });\n  return limits;\n}\nfunction getTranslateScalar(startTranslatePx, endTranslatePx, totalDist) {\n  var slow = endTranslatePx > startTranslatePx; // calculating necessary scale to increase translations\n\n  var totalAbsOff = (Math.abs(startTranslatePx) + Math.abs(endTranslatePx)) * (slow ? -1 : 1);\n  var totalDistTrue = totalDist + totalAbsOff; // Determine multiple to scale by, only values greater than 1\n\n  var scale = Math.max(totalDist / totalDistTrue, 1);\n  return scale;\n}\n\n/**\r\n * Return the start and end pixel values for an elements translations\r\n */\nfunction getStartEndValueInPx(translate, elementSize) {\n  var start = translate.start,\n    end = translate.end,\n    unit = translate.unit;\n  if (unit === '%') {\n    var scale = elementSize / 100;\n    start = start * scale;\n    end = end * scale;\n  }\n  if (unit === 'vw') {\n    var startScale = start / 100;\n    var endScale = end / 100;\n    start = window.innerWidth * startScale;\n    end = window.innerWidth * endScale;\n  }\n  if (unit === 'vh') {\n    var _startScale = start / 100;\n    var _endScale = end / 100;\n    start = window.innerHeight * _startScale;\n    end = window.innerHeight * _endScale;\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\nvar DEFAULT_VALUE = {\n  start: 0,\n  end: 0,\n  unit: ''\n};\nfunction createLimitsWithTranslationsForRelativeElements(rect, view, effects, scroll, scrollAxis, shouldAlwaysCompleteAnimation) {\n  // get start and end accounting for percent effects\n  var translateX = effects.translateX || DEFAULT_VALUE;\n  var translateY = effects.translateY || DEFAULT_VALUE;\n  var _getStartEndValueInPx = getStartEndValueInPx(translateX, rect.width),\n    startTranslateXPx = _getStartEndValueInPx.start,\n    endTranslateXPx = _getStartEndValueInPx.end;\n  var _getStartEndValueInPx2 = getStartEndValueInPx(translateY, rect.height),\n    startTranslateYPx = _getStartEndValueInPx2.start,\n    endTranslateYPx = _getStartEndValueInPx2.end; // default starting values\n\n  var startY = rect.top - view.height;\n  var startX = rect.left - view.width;\n  var endY = rect.bottom;\n  var endX = rect.right;\n  var startMultiplierY = 1;\n  var endMultiplierY = 1;\n  if (scrollAxis === ScrollAxis.vertical) {\n    startMultiplierY = getTranslateScalar(startTranslateYPx, endTranslateYPx, view.height + rect.height);\n    endMultiplierY = startMultiplierY;\n  }\n  var startMultiplierX = 1;\n  var endMultiplierX = 1;\n  if (scrollAxis === ScrollAxis.horizontal) {\n    startMultiplierX = getTranslateScalar(startTranslateXPx, endTranslateXPx, view.width + rect.width);\n    endMultiplierX = startMultiplierX;\n  } // Apply the scale to initial values\n\n  if (startTranslateYPx < 0) {\n    startY = startY + startTranslateYPx * startMultiplierY;\n  }\n  if (endTranslateYPx > 0) {\n    endY = endY + endTranslateYPx * endMultiplierY;\n  }\n  if (startTranslateXPx < 0) {\n    startX = startX + startTranslateXPx * startMultiplierX;\n  }\n  if (endTranslateXPx > 0) {\n    endX = endX + endTranslateXPx * endMultiplierX;\n  } // add scroll\n\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y; // NOTE: please refactor and isolate this :(\n\n  if (shouldAlwaysCompleteAnimation) {\n    var topBeginsInView = scroll.y + rect.top < view.height;\n    var leftBeginsInView = scroll.x + rect.left < view.width;\n    var bottomEndsInView = scroll.y + rect.bottom > view.scrollHeight - view.height;\n    var rightEndsInView = scroll.x + rect.right > view.scrollWidth - view.height;\n    if (topBeginsInView && bottomEndsInView) {\n      startMultiplierY = 1;\n      endMultiplierY = 1;\n      startY = 0;\n      endY = view.scrollHeight - view.height;\n    }\n    if (leftBeginsInView && rightEndsInView) {\n      startMultiplierX = 1;\n      endMultiplierX = 1;\n      startX = 0;\n      endX = view.scrollWidth - view.width;\n    }\n    if (!topBeginsInView && bottomEndsInView) {\n      startY = rect.top - view.height + scroll.y;\n      endY = view.scrollHeight - view.height;\n      var totalDist = endY - startY;\n      startMultiplierY = getTranslateScalar(startTranslateYPx, endTranslateYPx, totalDist);\n      endMultiplierY = 1;\n      if (startTranslateYPx < 0) {\n        startY = startY + startTranslateYPx * startMultiplierY;\n      }\n    }\n    if (!leftBeginsInView && rightEndsInView) {\n      startX = rect.left - view.width + scroll.x;\n      endX = view.scrollWidth - view.width;\n      var _totalDist = endX - startX;\n      startMultiplierX = getTranslateScalar(startTranslateXPx, endTranslateXPx, _totalDist);\n      endMultiplierX = 1;\n      if (startTranslateXPx < 0) {\n        startX = startX + startTranslateXPx * startMultiplierX;\n      }\n    }\n    if (topBeginsInView && !bottomEndsInView) {\n      startY = 0;\n      endY = rect.bottom + scroll.y;\n      var _totalDist2 = endY - startY;\n      startMultiplierY = 1;\n      endMultiplierY = getTranslateScalar(startTranslateYPx, endTranslateYPx, _totalDist2);\n      if (endTranslateYPx > 0) {\n        endY = endY + endTranslateYPx * endMultiplierY;\n      }\n    }\n    if (leftBeginsInView && !rightEndsInView) {\n      startX = 0;\n      endX = rect.right + scroll.x;\n      var _totalDist3 = endX - startX;\n      startMultiplierX = 1;\n      endMultiplierX = getTranslateScalar(startTranslateXPx, endTranslateXPx, _totalDist3);\n      if (endTranslateXPx > 0) {\n        endX = endX + endTranslateXPx * endMultiplierX;\n      }\n    }\n  }\n  var limits = new Limits({\n    startX: startX,\n    startY: startY,\n    endX: endX,\n    endY: endY,\n    startMultiplierX: startMultiplierX,\n    endMultiplierX: endMultiplierX,\n    startMultiplierY: startMultiplierY,\n    endMultiplierY: endMultiplierY\n  });\n  return limits;\n}\nfunction scaleTranslateEffectsForSlowerScroll(effects, limits) {\n  var effectsCopy = _extends({}, effects);\n  if (effectsCopy.translateX) {\n    effectsCopy.translateX = _extends({}, effects.translateX, {\n      start: effectsCopy.translateX.start * limits.startMultiplierX,\n      end: effectsCopy.translateX.end * limits.endMultiplierX\n    });\n  }\n  if (effectsCopy.translateY) {\n    effectsCopy.translateY = _extends({}, effects.translateY, {\n      start: effectsCopy.translateY.start * limits.startMultiplierY,\n      end: effectsCopy.translateY.end * limits.endMultiplierY\n    });\n  }\n  return effectsCopy;\n}\nfunction getShouldScaleTranslateEffects(props, effects, scrollAxis) {\n  if (props.rootMargin || props.targetElement || props.shouldDisableScalingTranslations) {\n    return false;\n  }\n  if (!!effects.translateX && scrollAxis === ScrollAxis.horizontal || !!effects.translateY && scrollAxis === ScrollAxis.vertical) {\n    return true;\n  }\n  return false;\n}\nvar clamp = function clamp(num, min, max) {\n  return Math.min(Math.max(num, min), max);\n};\nvar Element = /*#__PURE__*/function () {\n  function Element(options) {\n    this.el = options.el;\n    this.props = options.props;\n    this.scrollAxis = options.scrollAxis;\n    this.id = createId();\n    this.effects = parseElementTransitionEffects(this.props, this.scrollAxis);\n    this.isInView = null;\n    this.progress = 0;\n    this._setElementEasing(options.props.easing);\n    setWillChangeStyles(options.el, this.effects);\n  }\n  var _proto = Element.prototype;\n  _proto.updateProps = function updateProps(nextProps) {\n    this.props = _extends({}, this.props, nextProps);\n    this.effects = parseElementTransitionEffects(nextProps, this.scrollAxis);\n    this._setElementEasing(nextProps.easing);\n    return this;\n  };\n  _proto.setCachedAttributes = function setCachedAttributes(view, scroll) {\n    // NOTE: Must reset styles before getting the rect, as it might impact the natural position\n    resetStyles(this);\n    this.rect = new Rect({\n      el: this.props.targetElement || this.el,\n      rootMargin: this.props.rootMargin,\n      view: view\n    });\n    var shouldScaleTranslateEffects = getShouldScaleTranslateEffects(this.props, this.effects, this.scrollAxis);\n    if (typeof this.props.startScroll === 'number' && typeof this.props.endScroll === 'number') {\n      this.limits = new Limits({\n        startX: this.props.startScroll,\n        startY: this.props.startScroll,\n        endX: this.props.endScroll,\n        endY: this.props.endScroll\n      }); // Undo the reset -- place it back at current position with styles\n\n      this._setElementStyles();\n      return this;\n    }\n    if (shouldScaleTranslateEffects) {\n      this.limits = createLimitsWithTranslationsForRelativeElements(this.rect, view, this.effects, scroll, this.scrollAxis, this.props.shouldAlwaysCompleteAnimation);\n      this.scaledEffects = scaleTranslateEffectsForSlowerScroll(this.effects, this.limits);\n    } else {\n      this.limits = createLimitsForRelativeElements(this.rect, view, scroll, this.props.shouldAlwaysCompleteAnimation);\n    } // Undo the reset -- place it back at current position with styles\n\n    this._setElementStyles();\n    return this;\n  };\n  _proto._updateElementIsInView = function _updateElementIsInView(nextIsInView) {\n    // NOTE: Check if this is the first change to make sure onExit isn't called\n    var isFirstChange = this.isInView === null;\n    if (nextIsInView !== this.isInView) {\n      if (nextIsInView) {\n        this.props.onEnter && this.props.onEnter(this);\n      } else if (!isFirstChange) {\n        this._setFinalProgress();\n        this._setElementStyles();\n        this.props.onExit && this.props.onExit(this);\n      }\n    }\n    this.isInView = nextIsInView;\n  };\n  _proto._setFinalProgress = function _setFinalProgress() {\n    var finalProgress = clamp(Math.round(this.progress), 0, 1);\n    this._updateElementProgress(finalProgress);\n  };\n  _proto._setElementStyles = function _setElementStyles() {\n    if (this.props.disabled) return;\n    var effects = this.scaledEffects || this.effects;\n    setElementStyles(effects, this.progress, this.el);\n  };\n  _proto._updateElementProgress = function _updateElementProgress(nextProgress) {\n    this.progress = nextProgress;\n    this.props.onProgressChange && this.props.onProgressChange(this.progress);\n    this.props.onChange && this.props.onChange(this);\n  };\n  _proto._setElementEasing = function _setElementEasing(easing) {\n    this.easing = createEasingFunction(easing);\n  };\n  _proto.updatePosition = function updatePosition(scroll) {\n    if (!this.limits) return this;\n    var isVertical = this.scrollAxis === ScrollAxis.vertical;\n    var isFirstChange = this.isInView === null; // based on scroll axis\n\n    var start = isVertical ? this.limits.startY : this.limits.startX;\n    var end = isVertical ? this.limits.endY : this.limits.endX;\n    var total = isVertical ? this.limits.totalY : this.limits.totalX;\n    var s = isVertical ? scroll.y : scroll.x; // check if in view\n\n    var nextIsInView = isElementInView(start, end, s);\n    this._updateElementIsInView(nextIsInView); // set the progress if in view or this is the first change\n\n    if (nextIsInView) {\n      var nextProgress = getProgressAmount(start, total, s, this.easing);\n      this._updateElementProgress(nextProgress);\n      this._setElementStyles();\n    } else if (isFirstChange) {\n      // NOTE: this._updateElementProgress -- dont use this because it will trigger onChange\n      this.progress = clamp(Math.round(getProgressAmount(start, total, s, this.easing)), 0, 1);\n      this._setElementStyles();\n    }\n    return this;\n  };\n  return Element;\n}();\nvar View = /*#__PURE__*/function () {\n  function View(config) {\n    this.scrollContainer = config.scrollContainer;\n    this.width = config.width;\n    this.height = config.height;\n    this.scrollHeight = config.scrollHeight;\n    this.scrollWidth = config.scrollWidth;\n  }\n  var _proto = View.prototype;\n  _proto.hasChanged = function hasChanged(params) {\n    if (params.width !== this.width || params.height !== this.height || params.scrollWidth !== this.scrollWidth || params.scrollHeight !== this.scrollHeight) {\n      return true;\n    }\n    return false;\n  };\n  _proto.setSize = function setSize(params) {\n    this.width = params.width;\n    this.height = params.height;\n    this.scrollHeight = params.scrollHeight;\n    this.scrollWidth = params.scrollWidth;\n    return this;\n  };\n  return View;\n}();\nvar Scroll = /*#__PURE__*/function () {\n  function Scroll(x, y) {\n    this.x = x;\n    this.y = y;\n    this.dx = 0;\n    this.dy = 0;\n  }\n  var _proto = Scroll.prototype;\n  _proto.setScroll = function setScroll(x, y) {\n    this.dx = x - this.x;\n    this.dy = y - this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  };\n  return Scroll;\n}();\nfunction testForPassiveScroll() {\n  var supportsPassiveOption = false;\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supportsPassiveOption = true;\n        return true;\n      }\n    }); // @ts-expect-error\n\n    window.addEventListener('test', null, opts); // @ts-expect-error\n\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n  return supportsPassiveOption;\n}\n\n/**\r\n * -------------------------------------------------------\r\n * Parallax Controller\r\n * -------------------------------------------------------\r\n *\r\n * The global controller for setting up and managing a scroll view of elements.\r\n *\r\n */\n\nvar ParallaxController = /*#__PURE__*/function () {\n  function ParallaxController(_ref) {\n    var _ref$scrollAxis = _ref.scrollAxis,\n      scrollAxis = _ref$scrollAxis === void 0 ? ScrollAxis.vertical : _ref$scrollAxis,\n      scrollContainer = _ref.scrollContainer;\n    this.scrollAxis = scrollAxis; // All parallax elements to be updated\n\n    this.elements = [];\n    this._hasScrollContainer = !!scrollContainer;\n    this.viewEl = scrollContainer != null ? scrollContainer : window; // Scroll and View\n\n    var _this$_getScrollPosit = this._getScrollPosition(),\n      x = _this$_getScrollPosit[0],\n      y = _this$_getScrollPosit[1];\n    this.scroll = new Scroll(x, y);\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: this._hasScrollContainer ? scrollContainer : undefined\n    }); // Ticking\n\n    this._ticking = false; // Passive support\n\n    this._supportsPassive = testForPassiveScroll(); // Bind methods to class\n\n    this._bindAllMethods();\n    this._addListeners(this.viewEl);\n    this._addResizeObserver();\n    this._setViewSize();\n  }\n  /**\r\n   * Static method to instantiate the ParallaxController.\r\n   * @returns {Class} ParallaxController\r\n   */\n\n  ParallaxController.init = function init(options) {\n    var hasWindow = typeof window !== 'undefined';\n    if (!hasWindow) {\n      throw new Error('Looks like ParallaxController.init() was called on the server. This method must be called on the client.');\n    }\n    return new ParallaxController(options);\n  };\n  var _proto = ParallaxController.prototype;\n  _proto._bindAllMethods = function _bindAllMethods() {\n    var _this = this;\n    ['_addListeners', '_removeListeners', '_getScrollPosition', '_handleScroll', '_handleUpdateCache', '_updateAllElements', '_updateElementPosition', '_setViewSize', '_addResizeObserver', '_checkIfViewHasChanged', '_getViewParams', 'getElements', 'createElement', 'removeElementById', 'resetElementStyles', 'updateElementPropsById', 'update', 'updateScrollContainer', 'destroy'].forEach(function (method) {\n      // @ts-expect-error\n      _this[method] = _this[method].bind(_this);\n    });\n  };\n  _proto._addListeners = function _addListeners(el) {\n    el.addEventListener('scroll', this._handleScroll, this._supportsPassive ? {\n      passive: true\n    } : false);\n    window.addEventListener('resize', this._handleUpdateCache, false);\n    window.addEventListener('blur', this._handleUpdateCache, false);\n    window.addEventListener('focus', this._handleUpdateCache, false);\n    window.addEventListener('load', this._handleUpdateCache, false);\n  };\n  _proto._removeListeners = function _removeListeners(el) {\n    var _this$_resizeObserver;\n    el.removeEventListener('scroll', this._handleScroll, false);\n    window.removeEventListener('resize', this._handleUpdateCache, false);\n    window.removeEventListener('blur', this._handleUpdateCache, false);\n    window.removeEventListener('focus', this._handleUpdateCache, false);\n    window.removeEventListener('load', this._handleUpdateCache, false);\n    (_this$_resizeObserver = this._resizeObserver) == null ? void 0 : _this$_resizeObserver.disconnect();\n  };\n  _proto._addResizeObserver = function _addResizeObserver() {\n    var _this2 = this;\n    try {\n      var observedEl = this._hasScrollContainer ? this.viewEl : document.documentElement;\n      this._resizeObserver = new ResizeObserver(function () {\n        return _this2.update();\n      });\n      this._resizeObserver.observe(observedEl);\n    } catch (e) {\n      console.warn('Failed to create the resize observer in the ParallaxContoller');\n    }\n  };\n  _proto._getScrollPosition = function _getScrollPosition() {\n    // Save current scroll\n    // Supports IE 9 and up.\n    var nx = this._hasScrollContainer ?\n    // @ts-expect-error\n    this.viewEl.scrollLeft : window.pageXOffset;\n    var ny = this._hasScrollContainer ?\n    // @ts-expect-error\n    this.viewEl.scrollTop : window.pageYOffset;\n    return [nx, ny];\n  }\n  /**\r\n   * Window scroll handler sets scroll position\r\n   * and then calls '_updateAllElements()'.\r\n   */;\n  _proto._handleScroll = function _handleScroll() {\n    var _this$_getScrollPosit2 = this._getScrollPosition(),\n      nx = _this$_getScrollPosit2[0],\n      ny = _this$_getScrollPosit2[1];\n    this.scroll.setScroll(nx, ny); // Only called if the last animation request has been\n    // completed and there are parallax elements to update\n\n    if (!this._ticking && this.elements.length > 0) {\n      this._ticking = true; // @ts-ignore\n\n      window.requestAnimationFrame(this._updateAllElements);\n    }\n  }\n  /**\r\n   * Window resize handler. Sets the new window inner height\r\n   * then updates parallax element attributes and positions.\r\n   */;\n  _proto._handleUpdateCache = function _handleUpdateCache() {\n    this._setViewSize();\n    this._updateAllElements({\n      updateCache: true\n    });\n  }\n  /**\r\n   * Update element positions.\r\n   * Determines if the element is in view based on the cached\r\n   * attributes, if so set the elements parallax styles.\r\n   */;\n  _proto._updateAllElements = function _updateAllElements(_temp) {\n    var _this3 = this;\n    var _ref2 = _temp === void 0 ? {} : _temp,\n      updateCache = _ref2.updateCache;\n    if (this.elements) {\n      this.elements.forEach(function (element) {\n        if (updateCache) {\n          element.setCachedAttributes(_this3.view, _this3.scroll);\n        }\n        _this3._updateElementPosition(element);\n      });\n    } // reset ticking so more animations can be called\n\n    this._ticking = false;\n  }\n  /**\r\n   * Update element positions.\r\n   * Determines if the element is in view based on the cached\r\n   * attributes, if so set the elements parallax styles.\r\n   */;\n  _proto._updateElementPosition = function _updateElementPosition(element) {\n    if (element.props.disabled) return;\n    element.updatePosition(this.scroll);\n  }\n  /**\r\n   * Gets the params to set in the View from the scroll container or the window\r\n   */;\n  _proto._getViewParams = function _getViewParams() {\n    if (this._hasScrollContainer) {\n      // @ts-expect-error\n      var _width = this.viewEl.offsetWidth; // @ts-expect-error\n\n      var _height = this.viewEl.offsetHeight; // @ts-expect-error\n\n      var _scrollHeight = this.viewEl.scrollHeight; // @ts-expect-error\n\n      var _scrollWidth = this.viewEl.scrollWidth;\n      return this.view.setSize({\n        width: _width,\n        height: _height,\n        scrollHeight: _scrollHeight,\n        scrollWidth: _scrollWidth\n      });\n    }\n    var html = document.documentElement;\n    var width = window.innerWidth || html.clientWidth;\n    var height = window.innerHeight || html.clientHeight;\n    var scrollHeight = html.scrollHeight;\n    var scrollWidth = html.scrollWidth;\n    return {\n      width: width,\n      height: height,\n      scrollHeight: scrollHeight,\n      scrollWidth: scrollWidth\n    };\n  }\n  /**\r\n   * Cache the view attributes\r\n   */;\n  _proto._setViewSize = function _setViewSize() {\n    return this.view.setSize(this._getViewParams());\n  }\n  /**\r\n   * Checks if any of the cached attributes of the view have changed.\r\n   * @returns boolean\r\n   */;\n  _proto._checkIfViewHasChanged = function _checkIfViewHasChanged() {\n    return this.view.hasChanged(this._getViewParams());\n  }\n  /**\r\n   * -------------------------------------------------------\r\n   * Public methods\r\n   * -------------------------------------------------------\r\n   */\n\n  /**\r\n   * Returns all the parallax elements in the controller\r\n   */;\n  _proto.getElements = function getElements() {\n    return this.elements;\n  }\n  /**\r\n   * Creates and returns new parallax element with provided options to be managed by the controller.\r\n   */;\n  _proto.createElement = function createElement(options) {\n    var newElement = new Element(_extends({}, options, {\n      scrollAxis: this.scrollAxis\n    }));\n    newElement.setCachedAttributes(this.view, this.scroll);\n    this.elements = this.elements ? [].concat(this.elements, [newElement]) : [newElement];\n    this._updateElementPosition(newElement); // NOTE: This checks if the view has changed then update the controller and all elements if it has\n    // This shouldn't always be necessary with a resize observer watching the view element\n    // but there seems to be cases where the resize observer does not catch and update.\n\n    if (this._checkIfViewHasChanged()) {\n      this.update();\n    }\n    return newElement;\n  }\n  /**\r\n   * Remove an element by id\r\n   */;\n  _proto.removeElementById = function removeElementById(id) {\n    if (!this.elements) return;\n    this.elements = this.elements.filter(function (el) {\n      return el.id !== id;\n    });\n  }\n  /**\r\n   * Updates an existing parallax element object with new options.\r\n   */;\n  _proto.updateElementPropsById = function updateElementPropsById(id, props) {\n    if (this.elements) {\n      this.elements = this.elements.map(function (el) {\n        if (el.id === id) {\n          return el.updateProps(props);\n        }\n        return el;\n      });\n    }\n    this.update();\n  }\n  /**\r\n   * Remove a target elements parallax styles\r\n   */;\n  _proto.resetElementStyles = function resetElementStyles(element) {\n    resetStyles(element);\n  }\n  /**\r\n   * Updates all cached attributes on parallax elements.\r\n   */;\n  _proto.update = function update() {\n    // Save the latest scroll position because window.scroll\n    // may be called and the handle scroll event may not be called.\n    var _this$_getScrollPosit3 = this._getScrollPosition(),\n      nx = _this$_getScrollPosit3[0],\n      ny = _this$_getScrollPosit3[1];\n    this.scroll.setScroll(nx, ny);\n    this._setViewSize();\n    this._updateAllElements({\n      updateCache: true\n    });\n  }\n  /**\r\n   * Updates the scroll container of the parallax controller\r\n   */;\n  _proto.updateScrollContainer = function updateScrollContainer(el) {\n    // remove existing listeners with current el first\n    this._removeListeners(this.viewEl);\n    this.viewEl = el;\n    this._hasScrollContainer = !!el;\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: el\n    });\n    this._setViewSize();\n    this._addListeners(this.viewEl);\n    this._updateAllElements({\n      updateCache: true\n    });\n  }\n  /**\r\n   * Disable all parallax elements\r\n   */;\n  _proto.disableAllElements = function disableAllElements() {\n    if (this.elements) {\n      this.elements = this.elements.map(function (el) {\n        return el.updateProps({\n          disabled: true\n        });\n      });\n    }\n    this.update();\n  }\n  /**\r\n   * Enable all parallax elements\r\n   */;\n  _proto.enableAllElements = function enableAllElements() {\n    if (this.elements) {\n      this.elements = this.elements.map(function (el) {\n        return el.updateProps({\n          disabled: false\n        });\n      });\n    }\n    this.update();\n  }\n  /**\r\n   * Removes all listeners and resets all styles on managed elements.\r\n   */;\n  _proto.destroy = function destroy() {\n    this._removeListeners(this.viewEl);\n    if (this.elements) {\n      this.elements.forEach(function (element) {\n        return resetStyles(element);\n      });\n    } // @ts-expect-error\n\n    this.elements = undefined;\n  };\n  return ParallaxController;\n}();\nexport { EasingPreset, Element, Limits, ParallaxController, Rect, RotationUnits, ScaleUnits, Scroll, ScrollAxis, Units, ValidCSSEffects, View, createId, getProgressAmount, isElementInView, parseElementTransitionEffects, parseValueAndUnit, resetStyles, scaleBetween, scaleEffectByProgress, setElementStyles, testForPassiveScroll };","map":{"version":3,"mappings":";IAWaA,MAAb,GAYE,gBAAYC,UAAZ;EACE,KAAKC,MAAL,GAAcD,UAAU,CAACC,MAAzB;EACA,KAAKC,MAAL,GAAcF,UAAU,CAACE,MAAzB;EACA,KAAKC,IAAL,GAAYH,UAAU,CAACG,IAAvB;EACA,KAAKC,IAAL,GAAYJ,UAAU,CAACI,IAAvB;;EAEA,KAAKC,MAAL,GAAc,KAAKF,IAAL,GAAY,KAAKF,MAA/B;EACA,KAAKK,MAAL,GAAc,KAAKF,IAAL,GAAY,KAAKF,MAA/B;;EAGA,KAAKK,gBAAL,GAAwBP,UAAU,CAACO,gBAAX,IAA+B,CAAvD;EACA,KAAKC,cAAL,GAAsBR,UAAU,CAACQ,cAAX,IAA6B,CAAnD;EACA,KAAKC,gBAAL,GAAwBT,UAAU,CAACS,gBAAX,IAA+B,CAAvD;EACA,KAAKC,cAAL,GAAsBV,UAAU,CAACU,cAAX,IAA6B,CAAnD;AACD;;;;;;;;;;;;;;;ICpBSC,eAAZ;AAAA,WAAYA;EACVA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CAbD,EAAYA,eAAe,KAAfA,eAAe,MAA3B;AAeA,IAAYC,KAAZ;AAAA,WAAYA;EACVA;EACAA;EACAA;EACAA;AACD,CALD,EAAYA,KAAK,KAALA,KAAK,MAAjB;AAQA,IAAYC,aAAZ;AAAA,WAAYA;EACVA;EACAA;EACAA;AACD,CAJD,EAAYA,aAAa,KAAbA,aAAa,MAAzB;AAMA,IAAYC,UAAZ;AAAA,WAAYA;EACVA;AACD,CAFD,EAAYA,UAAU,KAAVA,UAAU,MAAtB;AAUA,IAAYC,UAAZ;AAAA,WAAYA;EACVA;EACAA;AACD,CAHD,EAAYA,UAAU,KAAVA,UAAU,MAAtB;AAqEA,IAAYC,YAAZ;AAAA,WAAYA;EACVA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;EACAA;AACD,CA7BD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;AC7HA;;;AAIA,IAAIC,EAAE,GAAG,CAAT;AAEA,SAAgBC;EACd,EAAED,EAAF;EACA,OAAOA,EAAP;AACD;ICNYE,IAAb;EAQE,cAAYC,OAAZ;IAKE,IAAIC,IAAI,GAAGD,OAAO,CAACE,EAAR,CAAWC,qBAAX,EAAX;;IAGA,IAAIH,OAAO,CAACI,IAAR,CAAaC,eAAjB,EAAkC;MAChC,IAAMC,UAAU,GAAGN,OAAO,CAACI,IAAR,CAAaC,eAAb,CAA6BF,qBAA7B,EAAnB;MACAF,IAAI,gBACCA,IADD;QAEFM,GAAG,EAAEN,IAAI,CAACM,GAAL,GAAWD,UAAU,CAACC,GAFzB;QAGFC,KAAK,EAAEP,IAAI,CAACO,KAAL,GAAaF,UAAU,CAACG,IAH7B;QAIFC,MAAM,EAAET,IAAI,CAACS,MAAL,GAAcJ,UAAU,CAACC,GAJ/B;QAKFE,IAAI,EAAER,IAAI,CAACQ,IAAL,GAAYH,UAAU,CAACG;MAL3B,EAAJ;IAOD;IACD,KAAKE,MAAL,GAAcX,OAAO,CAACE,EAAR,CAAWU,YAAzB;IACA,KAAKC,KAAL,GAAab,OAAO,CAACE,EAAR,CAAWY,WAAxB;IACA,KAAKL,IAAL,GAAYR,IAAI,CAACQ,IAAjB;IACA,KAAKD,KAAL,GAAaP,IAAI,CAACO,KAAlB;IACA,KAAKD,GAAL,GAAWN,IAAI,CAACM,GAAhB;IACA,KAAKG,MAAL,GAAcT,IAAI,CAACS,MAAnB;IAEA,IAAIV,OAAO,CAACe,UAAZ,EAAwB;MACtB,KAAKC,sBAAL,CAA4BhB,OAAO,CAACe,UAApC;IACD;EACF;EAED;;;;EAtCF;EAAAE,OAyCED,sBAzCF,GAyCE,gCAAuBD,UAAvB;IACE,IAAIG,UAAU,GAAGH,UAAU,CAACR,GAAX,GAAiBQ,UAAU,CAACL,MAA7C;IACA,IAAIS,UAAU,GAAGJ,UAAU,CAACN,IAAX,GAAkBM,UAAU,CAACP,KAA9C;IACA,KAAKD,GAAL,IAAYQ,UAAU,CAACR,GAAvB;IACA,KAAKC,KAAL,IAAcO,UAAU,CAACP,KAAzB;IACA,KAAKE,MAAL,IAAeK,UAAU,CAACL,MAA1B;IACA,KAAKD,IAAL,IAAaM,UAAU,CAACN,IAAxB;IACA,KAAKE,MAAL,IAAeO,UAAf;IACA,KAAKL,KAAL,IAAcM,UAAd;EACD,CAlDH;EAAA;AAAA;ACKO,IAAMC,WAAW,GAAG,CACzB1B,UAAU,CAAC,EAAD,CADe,EAEzBF,KAAK,CAAC6B,EAFmB,EAGzB7B,KAAK,CAAC,GAAD,CAHoB,EAIzBA,KAAK,CAAC,IAAD,CAJoB,EAKzBA,KAAK,CAAC,IAAD,CALoB,EAMzBC,aAAa,CAAC6B,GANW,EAOzB7B,aAAa,CAAC8B,IAPW,EAQzB9B,aAAa,CAAC+B,GARW,CAApB;AAWP;;;;AAIA,SAAgBC,kBACdC,KACAC;MAAAA;IAAAA,cAA6BnC,KAAK,CAAC,GAAD;;EAElC,IAAIoC,GAAG,GAAqB;IAAEC,KAAK,EAAE,CAAT;IAAYC,IAAI,EAAEH;EAAlB,CAA5B;EAEA,IAAI,OAAOD,GAAP,KAAe,WAAnB,EAAgC,OAAOE,GAAP;EAEhC,IAAMG,OAAO,GAAG,OAAOL,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,QAA1D;EAEA,IAAI,CAACK,OAAL,EAAc;IACZ,MAAM,IAAIC,KAAJ,CACJ,oEADI,CAAN;EAGD;EAEDN,GAAG,GAAGO,MAAM,CAACP,GAAD,CAAZ;EACAE,GAAG,CAACC,KAAJ,GAAYK,UAAU,CAACR,GAAD,CAAtB;;EAGAE,GAAG,CAACE,IAAJ,GAAWJ,GAAG,CAACS,KAAJ,CAAU,kBAAV,EAA8B,CAA9B,KAAoCR,WAA/C;;EAGA,IAAMS,WAAW,GAAYhB,WAAW,CAACiB,QAAZ,CAAqBT,GAAG,CAACE,IAAzB,CAA7B;EAEA,IAAI,CAACM,WAAL,EAAkB;IAChB,MAAM,IAAIJ,KAAJ,CAAU,wBAAV,CAAN;EACD;EAED,OAAOJ,GAAP;AACD;ACjDM,IAAMU,aAAa,GAAiB;EACzCC,IAAI,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CADmC;EAEzCC,MAAM,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,CAFiC;EAGzCC,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,GAAjB,CAHgC;EAIzCC,SAAS,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CAJ8B;EAKzC;EACAC,UAAU,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,IAApB,CAN6B;EAOzCC,WAAW,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,IAArB,CAP4B;EAQzCC,WAAW,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,IAArB,CAR4B;EASzCC,WAAW,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,IAArB,CAT4B;EAUzCC,UAAU,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,KAAZ,EAAmB,KAAnB,CAV6B;EAWzCC,UAAU,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,EAAoB,KAApB,CAX6B;EAYzCC,UAAU,EAAE,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,KAAlB,CAZ6B;EAazC;EACAC,WAAW,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAd4B;EAezCC,YAAY,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,GAArB,CAf2B;EAgBzCC,YAAY,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,GAApB,CAhB2B;EAiBzCC,YAAY,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CAjB2B;EAkBzCC,WAAW,EAAE,CAAC,IAAD,EAAO,KAAP,EAAc,KAAd,EAAqB,GAArB,CAlB4B;EAmBzCC,WAAW,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CAnB4B;EAoBzCC,WAAW,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,GAArB,CApB4B;EAqBzC;EACAC,aAAa,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,EAAqB,KAArB,CAtB0B;EAuBzCC,cAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,GAAtB,CAvByB;EAwBzCC,cAAc,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,KAAZ,EAAmB,GAAnB,CAxByB;EAyBzCC,cAAc,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,CAzByB;EA0BzCC,aAAa,EAAE,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CA1B0B;EA2BzCC,aAAa,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CA3B0B;EA4BzCC,aAAa,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,IAArB,CA5B0B;EA6BzC;EACAC,UAAU,EAAE,CAAC,GAAD,EAAM,CAAC,IAAP,EAAa,KAAb,EAAoB,KAApB,CA9B6B;EA+BzCC,WAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,IAAf,EAAqB,KAArB,CA/B4B;EAgCzCC,aAAa,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,EAAc,KAAd,EAAqB,IAArB;AAhC0B,CAApC;SCASC,qBACdC;EAEA,IAAIC,KAAK,CAACC,OAAN,CAAcF,MAAd,CAAJ,EAA2B;IACzB,OAAOG,MAAM,CAACH,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAxC,CAAb;EACD;EACD,IACE,OAAOA,MAAP,KAAkB,QAAlB,IACA,OAAO9B,aAAa,CAAC8B,MAAD,CAApB,KAAiC,WAFnC,EAGE;IACA,IAAMI,MAAM,GAAalC,aAAa,CAAC8B,MAAD,CAAtC;IACA,OAAOG,MAAM,CAACC,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC,CAAD,CAAlB,EAAuBA,MAAM,CAAC,CAAD,CAA7B,EAAkCA,MAAM,CAAC,CAAD,CAAxC,CAAb;EACD;EACD;AACD;ACPM,IAAMC,gBAAgB,gBAAGC,MAAM,CAACC,MAAP,CAAcpF,eAAd,CAAzB;AAEP,IAAaqF,0BAA0B,GAEnC;EACFC,KAAK,EAAE,IADL;EAEFC,UAAU,EAAE,GAFV;EAGFC,UAAU,EAAE,GAHV;EAIFC,MAAM,EAAE,KAJN;EAKFC,OAAO,EAAE,KALP;EAMFC,OAAO,EAAE,KANP;EAOFC,OAAO,EAAE,KAPP;EAQFC,KAAK,EAAE,EARL;EASFC,MAAM,EAAE,EATN;EAUFC,MAAM,EAAE,EAVN;EAWFC,MAAM,EAAE,EAXN;EAYFC,OAAO,EAAE;AAZP,CAFG;AAgBP;;;;AAGA,SAAgBC,8BACdC,OACAC;EAEA,IAAMC,aAAa,GAAyC,EAA5D;EAEAnB,gBAAgB,CAACoB,OAAjB,CAAyB,UAACC,GAAD;IACvB,IAAMC,YAAY,GAAkBnB,0BAA0B,CAACkB,GAAD,CAA9D;IAGA;;IACA,IAAI,QAAOJ,KAAP,oBAAOA,KAAK,CAAGI,GAAH,CAAZ,MAAwB,QAA5B,EAAsC;MACpC,IAAMjE,KAAK,GAAG6D,KAAH,oBAAGA,KAAK,CAAGI,GAAH,CAAnB;MACA,IAAME,UAAU,GAAM,CAACnE,KAAK,IAAI,CAAV,IAAe,EAArB,OAAhB;MACA,IAAMoE,QAAQ,GAAM,CAACpE,KAAK,IAAI,CAAV,IAAe,CAAC,EAAtB,OAAd;MAEA,IAAMqE,WAAW,GAAGzE,iBAAiB,CAACuE,UAAD,CAArC;MACA,IAAMG,SAAS,GAAG1E,iBAAiB,CAACwE,QAAD,CAAnC;MAEA,IAAMG,WAAW,GAAG;QAClBC,KAAK,EAAEH,WAAW,CAACrE,KADD;QAElByE,GAAG,EAAEH,SAAS,CAACtE,KAFG;QAGlBC,IAAI,EAAEoE,WAAW,CAACpE;MAHA,CAApB,CARoC;;MAepC,IAAI6D,UAAU,KAAKhG,UAAU,CAAC4G,QAA9B,EAAwC;QACtCX,aAAa,CAACb,UAAd,GAA2BqB,WAA3B;MACD,CAjBmC;;MAoBpC,IAAIT,UAAU,KAAKhG,UAAU,CAAC6G,UAA9B,EAA0C;QACxCZ,aAAa,CAACd,UAAd,GAA2BsB,WAA3B;MACD;IACF;;IAGD,IAAI/B,KAAK,CAACC,OAAN,CAAcoB,KAAd,oBAAcA,KAAK,CAAGI,GAAH,CAAnB,CAAJ,EAAiC;MAC/B,IAAMjE,MAAK,GAAG6D,KAAH,oBAAGA,KAAK,CAAGI,GAAH,CAAnB;MAEA,IAAI,OAAOjE,MAAK,CAAC,CAAD,CAAZ,KAAoB,WAApB,IAAmC,OAAOA,MAAK,CAAC,CAAD,CAAZ,KAAoB,WAA3D,EAAwE;QACtE,IAAMqE,YAAW,GAAGzE,iBAAiB,CAACI,MAAD,oBAACA,MAAK,CAAG,CAAH,CAAN,EAAakE,YAAb,CAArC;QACA,IAAMI,UAAS,GAAG1E,iBAAiB,CAACI,MAAD,oBAACA,MAAK,CAAG,CAAH,CAAN,EAAakE,YAAb,CAAnC;QAEA,IAAM3B,MAAM,GAAGD,oBAAoB,CAACtC,MAAD,oBAACA,MAAK,CAAG,CAAH,CAAN,CAAnC;QAEA+D,aAAa,CAACE,GAAD,CAAb,GAAqB;UACnBO,KAAK,EAAEH,YAAW,CAACrE,KADA;UAEnByE,GAAG,EAAEH,UAAS,CAACtE,KAFI;UAGnBC,IAAI,EAAEoE,YAAW,CAACpE,IAHC;UAInBsC,MAAM,EAANA;QAJmB,CAArB;QAOA,IAAI8B,YAAW,CAACpE,IAAZ,KAAqBqE,UAAS,CAACrE,IAAnC,EAAyC;UACvC,MAAM,IAAIE,KAAJ,CACJ,6EADI,CAAN;QAGD;MACF;IACF;EACF,CAtDD;EAwDA,OAAO4D,aAAP;AACD;;AC7FD;;;AAIA,SAAgBa;AACd;;;AAGAJ;AACA;;;AAGAK;AACA;;;AAGAC;AACA;;;AAGAvC;EAEA;EACA,IAAMwC,mBAAmB,GAAGD,aAAa,GAAGN,KAA5C;;EAGA,IAAIQ,MAAM,GAAGD,mBAAmB,GAAGF,SAAnC;;EAGA,IAAItC,MAAJ,EAAY;IACVyC,MAAM,GAAGzC,MAAM,CAACyC,MAAD,CAAf;EACD;EAED,OAAOA,MAAP;AACD;;ACpCD;;;;;;;AAQA,SAAgBC,gBACdT,OACAC,KACAS;EAEA,IAAMC,QAAQ,GAAGD,MAAM,IAAIV,KAAV,IAAmBU,MAAM,IAAIT,GAA9C;EAEA,OAAOU,QAAP;AACD;;AChBD;AACA,SAAgBC,aACdpF,OACAqF,QACAC,QACAC,QACAC;EAEA,OAAQ,CAACF,MAAM,GAAGD,MAAV,KAAqBrF,KAAK,GAAGuF,MAA7B,CAAD,IAA0CC,MAAM,GAAGD,MAAnD,IAA6DF,MAApE;AACD;;ACLD;;;;AAGA,SAAgBI,sBACdC,QACAC;EAKA,IAAM3F,KAAK,GAAGoF,YAAY,CACxB,OAAOM,MAAM,CAACnD,MAAd,KAAyB,UAAzB,GAAsCmD,MAAM,CAACnD,MAAP,CAAcoD,QAAd,CAAtC,GAAgEA,QADxC,EAExB,OAAM,QAAN,kBAAM,CAAEnB,KAAR,KAAiB,CAFO,EAGxB,OAAM,QAAN,kBAAM,CAAEC,GAAR,KAAe,CAHS,EAIxB,CAJwB,EAKxB,CALwB,CAA1B;EAQA,OAAO;IACLzE,KAAK,EAALA,KADK;IAELC,IAAI,EAAEyF,MAAF,oBAAEA,MAAM,CAAEzF;EAFT,CAAP;AAID;ACrBD,IAAM2F,iBAAiB,gBAAG/C,MAAM,CAACC,MAAP,CAAcpF,eAAd,EAA+BmI,MAA/B,CACxB,WAAC;EAAA,OAAIC,CAAC,KAAK,SAAV;AAAA,CADuB,CAA1B;AAIA,SAAgBC,oBACd1H,IACA2H;EAEA,IAAMC,IAAI,GAAGpD,MAAM,CAACoD,IAAP,CAAYD,OAAZ,CAAb;EACA,IAAME,UAAU,GAAGD,IAAI,CAACzF,QAAL,CAAc,SAAd,CAAnB;EACA,IAAM2F,UAAU,kBAAeD,UAAU,GAAG,UAAH,GAAgB,EAAzC,CAAhB;EACA7H,EAAE,CAAC+H,KAAH,CAASD,UAAT,GAAsBA,UAAtB;AACD;AAED,SAAgBE,iBACdL,SACAL,UACAtH;EAEA,IAAI,CAACA,EAAL,EAAS;EACT,IAAMiI,SAAS,GAAGC,kBAAkB,CAACP,OAAD,EAAUL,QAAV,CAApC;EACA,IAAMhC,OAAO,GAAG6C,gBAAgB,CAACR,OAAD,EAAUL,QAAV,CAAhC;EACAtH,EAAE,CAAC+H,KAAH,CAASE,SAAT,GAAqBA,SAArB;EACAjI,EAAE,CAAC+H,KAAH,CAASzC,OAAT,GAAmBA,OAAnB;AACD;AAED,SAAgB6C,iBACdR,SACAL;EAEA,IAAMc,aAAa,GACjBT,OAAO,CAAC,SAAD,CAAP,IAAsBP,qBAAqB,CAACO,OAAO,CAAC,SAAD,CAAR,EAAqBL,QAArB,CAD7C;EAGA,IACE,OAAOc,aAAP,KAAyB,WAAzB,IACA,OAAOA,aAAa,CAACzG,KAArB,KAA+B,WAD/B,IAEA,OAAOyG,aAAa,CAACxG,IAArB,KAA8B,WAHhC,EAIE;IACA,OAAO,EAAP;EACD;EAED,IAAMyG,QAAQ,QAAMD,aAAa,CAACzG,KAAlC;EAEA,OAAO0G,QAAP;AACD;AAED,SAAgBH,mBACdP,SACAL;EAEA,IAAMW,SAAS,GAAWV,iBAAiB,CAACe,MAAlB,CAAyB,UAACC,GAAD,EAAM3C,GAAN;IACjD,IAAM4C,YAAY;IAAA;IAEhBb,OAAO,CAAC/B,GAAD,CAAP,IAAgBwB,qBAAqB,CAACO,OAAO,CAAC/B,GAAD,CAAR,EAAe0B,QAAf,CAFvC;IAIA,IACE,OAAOkB,YAAP,KAAwB,WAAxB,IACA,OAAOA,YAAY,CAAC7G,KAApB,KAA8B,WAD9B,IAEA,OAAO6G,YAAY,CAAC5G,IAApB,KAA6B,WAH/B,EAIE;MACA,OAAO2G,GAAP;IACD;IAED,IAAMF,QAAQ,GAAMzC,GAAN,SAAa4C,YAAY,CAAC7G,KAA1B,GAAkC6G,YAAY,CAAC5G,IAA/C,MAAd;IAEA,OAAO2G,GAAG,GAAGF,QAAb;EACD,CAhByB,EAgBvB,EAhBuB,CAA1B;EAkBA,OAAOJ,SAAP;AACD;AAED;;;;;AAIA,SAAgBQ,YAAYC;EAC1B,IAAM1I,EAAE,GAAG0I,OAAO,CAAC1I,EAAnB;EACA,IAAI,CAACA,EAAL,EAAS;EACTA,EAAE,CAAC+H,KAAH,CAASE,SAAT,GAAqB,EAArB;EACAjI,EAAE,CAAC+H,KAAH,CAASzC,OAAT,GAAmB,EAAnB;AACD;SClFeqD,gCACd5I,MACAG,MACA2G,QACA+B;EAEA,IAAIhK,MAAM,GAAGmB,IAAI,CAACM,GAAL,GAAWH,IAAI,CAACO,MAA7B;EACA,IAAI9B,MAAM,GAAGoB,IAAI,CAACQ,IAAL,GAAYL,IAAI,CAACS,KAA9B;EACA,IAAI7B,IAAI,GAAGiB,IAAI,CAACS,MAAhB;EACA,IAAI3B,IAAI,GAAGkB,IAAI,CAACO,KAAhB;;EAGA3B,MAAM,IAAIkI,MAAM,CAACgC,CAAjB;EACAhK,IAAI,IAAIgI,MAAM,CAACgC,CAAf;EACAjK,MAAM,IAAIiI,MAAM,CAACiC,CAAjB;EACAhK,IAAI,IAAI+H,MAAM,CAACiC,CAAf;EAEA,IAAIF,6BAAJ,EAAmC;IACjC,IAAI/B,MAAM,CAACiC,CAAP,GAAW/I,IAAI,CAACM,GAAhB,GAAsBH,IAAI,CAACO,MAA/B,EAAuC;MACrC7B,MAAM,GAAG,CAAT;IACD;IACD,IAAIiI,MAAM,CAACgC,CAAP,GAAW9I,IAAI,CAACQ,IAAhB,GAAuBL,IAAI,CAACS,KAAhC,EAAuC;MACrChC,MAAM,GAAG,CAAT;IACD;IACD,IAAIG,IAAI,GAAGoB,IAAI,CAAC6I,YAAL,GAAoB7I,IAAI,CAACO,MAApC,EAA4C;MAC1C3B,IAAI,GAAGoB,IAAI,CAAC6I,YAAL,GAAoB7I,IAAI,CAACO,MAAhC;IACD;IACD,IAAI5B,IAAI,GAAGqB,IAAI,CAAC8I,WAAL,GAAmB9I,IAAI,CAACS,KAAnC,EAA0C;MACxC9B,IAAI,GAAGqB,IAAI,CAAC8I,WAAL,GAAmB9I,IAAI,CAACS,KAA/B;IACD;EACF;EAED,IAAMsI,MAAM,GAAG,IAAIxK,MAAJ,CAAW;IACxBE,MAAM,EAANA,MADwB;IAExBC,MAAM,EAANA,MAFwB;IAGxBC,IAAI,EAAJA,IAHwB;IAIxBC,IAAI,EAAJA;EAJwB,CAAX,CAAf;EAOA,OAAOmK,MAAP;AACD;SC3CeC,mBACdC,kBACAC,gBACA5C;EAEA,IAAM6C,IAAI,GAAGD,cAAc,GAAGD,gBAA9B;;EAGA,IAAMG,WAAW,GACf,CAACC,IAAI,CAACC,GAAL,CAASL,gBAAT,IAA6BI,IAAI,CAACC,GAAL,CAASJ,cAAT,CAA9B,KAA2DC,IAAI,GAAG,CAAC,CAAJ,GAAQ,CAAvE,CADF;EAEA,IAAMI,aAAa,GAAGjD,SAAS,GAAG8C,WAAlC;;EAGA,IAAMpE,KAAK,GAAGqE,IAAI,CAACG,GAAL,CAASlD,SAAS,GAAGiD,aAArB,EAAoC,CAApC,CAAd;EAEA,OAAOvE,KAAP;AACD;;ACdD;;;AAGA,SAAgByE,qBACdC,WACAC;EAEA,IAAM1D,KAAN,GAA2ByD,SAA3B,CAAMzD,KAAN;IAAaC,GAAb,GAA2BwD,SAA3B,CAAaxD,GAAb;IAAkBxE,IAAlB,GAA2BgI,SAA3B,CAAkBhI,IAAlB;EAEA,IAAIA,IAAI,KAAK,GAAb,EAAkB;IAChB,IAAMsD,KAAK,GAAG2E,WAAW,GAAG,GAA5B;IACA1D,KAAK,GAAGA,KAAK,GAAGjB,KAAhB;IACAkB,GAAG,GAAGA,GAAG,GAAGlB,KAAZ;EACD;EAED,IAAItD,IAAI,KAAK,IAAb,EAAmB;IACjB,IAAMkI,UAAU,GAAG3D,KAAK,GAAG,GAA3B;IACA,IAAM4D,QAAQ,GAAG3D,GAAG,GAAG,GAAvB;IACAD,KAAK,GAAG6D,MAAM,CAACC,UAAP,GAAoBH,UAA5B;IACA1D,GAAG,GAAG4D,MAAM,CAACC,UAAP,GAAoBF,QAA1B;EACD;EAED,IAAInI,IAAI,KAAK,IAAb,EAAmB;IACjB,IAAMkI,WAAU,GAAG3D,KAAK,GAAG,GAA3B;IACA,IAAM4D,SAAQ,GAAG3D,GAAG,GAAG,GAAvB;IACAD,KAAK,GAAG6D,MAAM,CAACE,WAAP,GAAqBJ,WAA7B;IACA1D,GAAG,GAAG4D,MAAM,CAACE,WAAP,GAAqBH,SAA3B;EACD;EAED,OAAO;IACL5D,KAAK,EAALA,KADK;IAELC,GAAG,EAAHA;EAFK,CAAP;AAID;ACzBD,IAAM+D,aAAa,GAAsB;EACvChE,KAAK,EAAE,CADgC;EAEvCC,GAAG,EAAE,CAFkC;EAGvCxE,IAAI,EAAE;AAHiC,CAAzC;AAMA,SAAgBwI,gDACdrK,MACAG,MACAyH,SACAd,QACApB,YACAmD;EAEA;EACA,IAAMhE,UAAU,GAAsB+C,OAAO,CAAC/C,UAAR,IAAsBuF,aAA5D;EACA,IAAMtF,UAAU,GAAsB8C,OAAO,CAAC9C,UAAR,IAAsBsF,aAA5D;EAEA,4BAGIR,oBAAoB,CAAC/E,UAAD,EAAa7E,IAAI,CAACY,KAAlB,CAHxB;IACS0J,iBADT,yBACElE,KADF;IAEOmE,eAFP,yBAEElE,GAFF;EAIA,6BAGIuD,oBAAoB,CAAC9E,UAAD,EAAa9E,IAAI,CAACU,MAAlB,CAHxB;IACS8J,iBADT,0BACEpE,KADF;IAEOqE,eAFP,0BAEEpE,GAFF;;EAMA,IAAIxH,MAAM,GAAGmB,IAAI,CAACM,GAAL,GAAWH,IAAI,CAACO,MAA7B;EACA,IAAI9B,MAAM,GAAGoB,IAAI,CAACQ,IAAL,GAAYL,IAAI,CAACS,KAA9B;EACA,IAAI7B,IAAI,GAAGiB,IAAI,CAACS,MAAhB;EACA,IAAI3B,IAAI,GAAGkB,IAAI,CAACO,KAAhB;EAEA,IAAInB,gBAAgB,GAAG,CAAvB;EACA,IAAIC,cAAc,GAAG,CAArB;EACA,IAAIqG,UAAU,KAAKhG,UAAU,CAAC4G,QAA9B,EAAwC;IACtClH,gBAAgB,GAAG+J,kBAAkB,CACnCqB,iBADmC,EAEnCC,eAFmC,EAGnCtK,IAAI,CAACO,MAAL,GAAcV,IAAI,CAACU,MAHgB,CAArC;IAKArB,cAAc,GAAGD,gBAAjB;EACD;EACD,IAAIF,gBAAgB,GAAG,CAAvB;EACA,IAAIC,cAAc,GAAG,CAArB;EACA,IAAIuG,UAAU,KAAKhG,UAAU,CAAC6G,UAA9B,EAA0C;IACxCrH,gBAAgB,GAAGiK,kBAAkB,CACnCmB,iBADmC,EAEnCC,eAFmC,EAGnCpK,IAAI,CAACS,KAAL,GAAaZ,IAAI,CAACY,KAHiB,CAArC;IAKAzB,cAAc,GAAGD,gBAAjB;EACD;;EAGD,IAAIsL,iBAAiB,GAAG,CAAxB,EAA2B;IACzB3L,MAAM,GAAGA,MAAM,GAAG2L,iBAAiB,GAAGpL,gBAAtC;EACD;EACD,IAAIqL,eAAe,GAAG,CAAtB,EAAyB;IACvB1L,IAAI,GAAGA,IAAI,GAAG0L,eAAe,GAAGpL,cAAhC;EACD;EACD,IAAIiL,iBAAiB,GAAG,CAAxB,EAA2B;IACzB1L,MAAM,GAAGA,MAAM,GAAG0L,iBAAiB,GAAGpL,gBAAtC;EACD;EACD,IAAIqL,eAAe,GAAG,CAAtB,EAAyB;IACvBzL,IAAI,GAAGA,IAAI,GAAGyL,eAAe,GAAGpL,cAAhC;EACD;;EAGDP,MAAM,IAAIkI,MAAM,CAACgC,CAAjB;EACAhK,IAAI,IAAIgI,MAAM,CAACgC,CAAf;EACAjK,MAAM,IAAIiI,MAAM,CAACiC,CAAjB;EACAhK,IAAI,IAAI+H,MAAM,CAACiC,CAAf;;EAGA,IAAIF,6BAAJ,EAAmC;IACjC,IAAM6B,eAAe,GAAG5D,MAAM,CAACiC,CAAP,GAAW/I,IAAI,CAACM,GAAhB,GAAsBH,IAAI,CAACO,MAAnD;IACA,IAAMiK,gBAAgB,GAAG7D,MAAM,CAACgC,CAAP,GAAW9I,IAAI,CAACQ,IAAhB,GAAuBL,IAAI,CAACS,KAArD;IACA,IAAMgK,gBAAgB,GACpB9D,MAAM,CAACiC,CAAP,GAAW/I,IAAI,CAACS,MAAhB,GAAyBN,IAAI,CAAC6I,YAAL,GAAoB7I,IAAI,CAACO,MADpD;IAEA,IAAMmK,eAAe,GACnB/D,MAAM,CAACgC,CAAP,GAAW9I,IAAI,CAACO,KAAhB,GAAwBJ,IAAI,CAAC8I,WAAL,GAAmB9I,IAAI,CAACO,MADlD;IAGA,IAAIgK,eAAe,IAAIE,gBAAvB,EAAyC;MACvCxL,gBAAgB,GAAG,CAAnB;MACAC,cAAc,GAAG,CAAjB;MACAR,MAAM,GAAG,CAAT;MACAE,IAAI,GAAGoB,IAAI,CAAC6I,YAAL,GAAoB7I,IAAI,CAACO,MAAhC;IACD;IACD,IAAIiK,gBAAgB,IAAIE,eAAxB,EAAyC;MACvC3L,gBAAgB,GAAG,CAAnB;MACAC,cAAc,GAAG,CAAjB;MACAP,MAAM,GAAG,CAAT;MACAE,IAAI,GAAGqB,IAAI,CAAC8I,WAAL,GAAmB9I,IAAI,CAACS,KAA/B;IACD;IAED,IAAI,CAAC8J,eAAD,IAAoBE,gBAAxB,EAA0C;MACxC/L,MAAM,GAAGmB,IAAI,CAACM,GAAL,GAAWH,IAAI,CAACO,MAAhB,GAAyBoG,MAAM,CAACiC,CAAzC;MACAhK,IAAI,GAAGoB,IAAI,CAAC6I,YAAL,GAAoB7I,IAAI,CAACO,MAAhC;MACA,IAAM+F,SAAS,GAAG1H,IAAI,GAAGF,MAAzB;MACAO,gBAAgB,GAAG+J,kBAAkB,CACnCqB,iBADmC,EAEnCC,eAFmC,EAGnChE,SAHmC,CAArC;MAKApH,cAAc,GAAG,CAAjB;MACA,IAAImL,iBAAiB,GAAG,CAAxB,EAA2B;QACzB3L,MAAM,GAAGA,MAAM,GAAG2L,iBAAiB,GAAGpL,gBAAtC;MACD;IACF;IACD,IAAI,CAACuL,gBAAD,IAAqBE,eAAzB,EAA0C;MACxCjM,MAAM,GAAGoB,IAAI,CAACQ,IAAL,GAAYL,IAAI,CAACS,KAAjB,GAAyBkG,MAAM,CAACgC,CAAzC;MACAhK,IAAI,GAAGqB,IAAI,CAAC8I,WAAL,GAAmB9I,IAAI,CAACS,KAA/B;MACA,IAAM6F,UAAS,GAAG3H,IAAI,GAAGF,MAAzB;MACAM,gBAAgB,GAAGiK,kBAAkB,CACnCmB,iBADmC,EAEnCC,eAFmC,EAGnC9D,UAHmC,CAArC;MAKAtH,cAAc,GAAG,CAAjB;MACA,IAAImL,iBAAiB,GAAG,CAAxB,EAA2B;QACzB1L,MAAM,GAAGA,MAAM,GAAG0L,iBAAiB,GAAGpL,gBAAtC;MACD;IACF;IAED,IAAIwL,eAAe,IAAI,CAACE,gBAAxB,EAA0C;MACxC/L,MAAM,GAAG,CAAT;MACAE,IAAI,GAAGiB,IAAI,CAACS,MAAL,GAAcqG,MAAM,CAACiC,CAA5B;MACA,IAAMtC,WAAS,GAAG1H,IAAI,GAAGF,MAAzB;MACAO,gBAAgB,GAAG,CAAnB;MACAC,cAAc,GAAG8J,kBAAkB,CACjCqB,iBADiC,EAEjCC,eAFiC,EAGjChE,WAHiC,CAAnC;MAKA,IAAIgE,eAAe,GAAG,CAAtB,EAAyB;QACvB1L,IAAI,GAAGA,IAAI,GAAG0L,eAAe,GAAGpL,cAAhC;MACD;IACF;IACD,IAAIsL,gBAAgB,IAAI,CAACE,eAAzB,EAA0C;MACxCjM,MAAM,GAAG,CAAT;MACAE,IAAI,GAAGkB,IAAI,CAACO,KAAL,GAAauG,MAAM,CAACgC,CAA3B;MACA,IAAMrC,WAAS,GAAG3H,IAAI,GAAGF,MAAzB;MACAM,gBAAgB,GAAG,CAAnB;MACAC,cAAc,GAAGgK,kBAAkB,CACjCmB,iBADiC,EAEjCC,eAFiC,EAGjC9D,WAHiC,CAAnC;MAKA,IAAI8D,eAAe,GAAG,CAAtB,EAAyB;QACvBzL,IAAI,GAAGA,IAAI,GAAGyL,eAAe,GAAGpL,cAAhC;MACD;IACF;EACF;EAED,IAAM+J,MAAM,GAAG,IAAIxK,MAAJ,CAAW;IACxBE,MAAM,EAANA,MADwB;IAExBC,MAAM,EAANA,MAFwB;IAGxBC,IAAI,EAAJA,IAHwB;IAIxBC,IAAI,EAAJA,IAJwB;IAKxBG,gBAAgB,EAAhBA,gBALwB;IAMxBC,cAAc,EAAdA,cANwB;IAOxBC,gBAAgB,EAAhBA,gBAPwB;IAQxBC,cAAc,EAAdA;EARwB,CAAX,CAAf;EAWA,OAAO6J,MAAP;AACD;SC9Ke4B,qCACdlD,SACAsB;EAEA,IAAM6B,WAAW,gBACZnD,OADY,CAAjB;EAIA,IAAImD,WAAW,CAAClG,UAAhB,EAA4B;IAC1BkG,WAAW,CAAClG,UAAZ,gBACK+C,OAAO,CAAC/C,UADb;MAEEuB,KAAK,EAAE2E,WAAW,CAAClG,UAAZ,CAAuBuB,KAAvB,GAA+B8C,MAAM,CAAChK,gBAF/C;MAGEmH,GAAG,EAAE0E,WAAW,CAAClG,UAAZ,CAAuBwB,GAAvB,GAA6B6C,MAAM,CAAC/J;IAH3C;EAKD;EACD,IAAI4L,WAAW,CAACjG,UAAhB,EAA4B;IAC1BiG,WAAW,CAACjG,UAAZ,gBACK8C,OAAO,CAAC9C,UADb;MAEEsB,KAAK,EAAE2E,WAAW,CAACjG,UAAZ,CAAuBsB,KAAvB,GAA+B8C,MAAM,CAAC9J,gBAF/C;MAGEiH,GAAG,EAAE0E,WAAW,CAACjG,UAAZ,CAAuBuB,GAAvB,GAA6B6C,MAAM,CAAC7J;IAH3C;EAKD;EAED,OAAO0L,WAAP;AACD;SCxBeC,+BACdvF,OACAmC,SACAlC;EAEA,IACED,KAAK,CAAC3E,UAAN,IACA2E,KAAK,CAACwF,aADN,IAEAxF,KAAK,CAACyF,gCAHR,EAIE;IACA,OAAO,KAAP;EACD;EAED,IACG,CAAC,CAACtD,OAAO,CAAC/C,UAAV,IAAwBa,UAAU,KAAKhG,UAAU,CAAC6G,UAAnD,IACC,CAAC,CAACqB,OAAO,CAAC9C,UAAV,IAAwBY,UAAU,KAAKhG,UAAU,CAAC4G,QAFrD,EAGE;IACA,OAAO,IAAP;EACD;EAED,OAAO,KAAP;AACD;ACxBM,IAAM6E,KAAK,GAAG,SAARA,KAAQA,CAACC,GAAD,EAAcC,GAAd,EAA2B1B,GAA3B;EAAA,OACnBH,IAAI,CAAC6B,GAAL,CAAS7B,IAAI,CAACG,GAAL,CAASyB,GAAT,EAAcC,GAAd,CAAT,EAA6B1B,GAA7B,CADmB;AAAA,CAAd;ICiCM2B,OAAb;EAcE,iBAAYvL,OAAZ;IACE,KAAKE,EAAL,GAAUF,OAAO,CAACE,EAAlB;IACA,KAAKwF,KAAL,GAAa1F,OAAO,CAAC0F,KAArB;IACA,KAAKC,UAAL,GAAkB3F,OAAO,CAAC2F,UAA1B;IACA,KAAK9F,EAAL,GAAUC,QAAQ,EAAlB;IACA,KAAK+H,OAAL,GAAepC,6BAA6B,CAAC,KAAKC,KAAN,EAAa,KAAKC,UAAlB,CAA5C;IACA,KAAKqB,QAAL,GAAgB,IAAhB;IACA,KAAKQ,QAAL,GAAgB,CAAhB;IAEA,KAAKgE,iBAAL,CAAuBxL,OAAO,CAAC0F,KAAR,CAActB,MAArC;IAEAwD,mBAAmB,CAAC5H,OAAO,CAACE,EAAT,EAAa,KAAK2H,OAAlB,CAAnB;EACD;EA1BH;EAAA5G,OA4BEwK,WA5BF,GA4BE,qBAAYC,SAAZ;IACE,KAAKhG,KAAL,gBAAkB,KAAKA,KAAvB,EAAiCgG,SAAjC;IACA,KAAK7D,OAAL,GAAepC,6BAA6B,CAACiG,SAAD,EAAY,KAAK/F,UAAjB,CAA5C;IACA,KAAK6F,iBAAL,CAAuBE,SAAS,CAACtH,MAAjC;IAEA,OAAO,IAAP;EACD,CAlCH;EAAAnD,OAoCE0K,mBApCF,GAoCE,6BAAoBvL,IAApB,EAAgC2G,MAAhC;IACE;IACA4B,WAAW,CAAC,IAAD,CAAX;IAEA,KAAK1I,IAAL,GAAY,IAAIF,IAAJ,CAAS;MACnBG,EAAE,EAAE,KAAKwF,KAAL,CAAWwF,aAAX,IAA4B,KAAKhL,EADlB;MAEnBa,UAAU,EAAE,KAAK2E,KAAL,CAAW3E,UAFJ;MAGnBX,IAAI,EAAJA;IAHmB,CAAT,CAAZ;IAMA,IAAMwL,2BAA2B,GAAGX,8BAA8B,CAChE,KAAKvF,KAD2D,EAEhE,KAAKmC,OAF2D,EAGhE,KAAKlC,UAH2D,CAAlE;IAMA,IACE,OAAO,KAAKD,KAAL,CAAWmG,WAAlB,KAAkC,QAAlC,IACA,OAAO,KAAKnG,KAAL,CAAWoG,SAAlB,KAAgC,QAFlC,EAGE;MACA,KAAK3C,MAAL,GAAc,IAAIxK,MAAJ,CAAW;QACvBE,MAAM,EAAE,KAAK6G,KAAL,CAAWmG,WADI;QAEvB/M,MAAM,EAAE,KAAK4G,KAAL,CAAWmG,WAFI;QAGvB9M,IAAI,EAAE,KAAK2G,KAAL,CAAWoG,SAHM;QAIvB9M,IAAI,EAAE,KAAK0G,KAAL,CAAWoG;MAJM,CAAX,CAAd,CADA;;MASA,KAAKC,iBAAL;MAEA,OAAO,IAAP;IACD;IAED,IAAIH,2BAAJ,EAAiC;MAC/B,KAAKzC,MAAL,GAAcmB,+CAA+C,CAC3D,KAAKrK,IADsD,EAE3DG,IAF2D,EAG3D,KAAKyH,OAHsD,EAI3Dd,MAJ2D,EAK3D,KAAKpB,UALsD,EAM3D,KAAKD,KAAL,CAAWoD,6BANgD,CAA7D;MASA,KAAKkD,aAAL,GAAqBjB,oCAAoC,CACvD,KAAKlD,OADkD,EAEvD,KAAKsB,MAFkD,CAAzD;IAID,CAdD,MAcO;MACL,KAAKA,MAAL,GAAcN,+BAA+B,CAC3C,KAAK5I,IADsC,EAE3CG,IAF2C,EAG3C2G,MAH2C,EAI3C,KAAKrB,KAAL,CAAWoD,6BAJgC,CAA7C;IAMD;;IAGD,KAAKiD,iBAAL;IAEA,OAAO,IAAP;EACD,CAhGH;EAAA9K,OAkGEgL,sBAlGF,GAkGE,gCAAuBC,YAAvB;IACE;IACA,IAAMC,aAAa,GAAG,KAAKnF,QAAL,KAAkB,IAAxC;IACA,IAAIkF,YAAY,KAAK,KAAKlF,QAA1B,EAAoC;MAClC,IAAIkF,YAAJ,EAAkB;QAChB,KAAKxG,KAAL,CAAW0G,OAAX,IAAsB,KAAK1G,KAAL,CAAW0G,OAAX,CAAmB,IAAnB,CAAtB;MACD,CAFD,MAEO,IAAI,CAACD,aAAL,EAAoB;QACzB,KAAKE,iBAAL;QACA,KAAKN,iBAAL;QACA,KAAKrG,KAAL,CAAW4G,MAAX,IAAqB,KAAK5G,KAAL,CAAW4G,MAAX,CAAkB,IAAlB,CAArB;MACD;IACF;IACD,KAAKtF,QAAL,GAAgBkF,YAAhB;EACD,CA/GH;EAAAjL,OAiHEoL,iBAjHF,GAiHE;IACE,IAAME,aAAa,GAAGnB,KAAK,CAAC3B,IAAI,CAAC+C,KAAL,CAAW,KAAKhF,QAAhB,CAAD,EAA4B,CAA5B,EAA+B,CAA/B,CAA3B;IACA,KAAKiF,sBAAL,CAA4BF,aAA5B;EACD,CApHH;EAAAtL,OAsHE8K,iBAtHF,GAsHE;IACE,IAAI,KAAKrG,KAAL,CAAWgH,QAAf,EAAyB;IACzB,IAAM7E,OAAO,GAAG,KAAKmE,aAAL,IAAsB,KAAKnE,OAA3C;IACAK,gBAAgB,CAACL,OAAD,EAAU,KAAKL,QAAf,EAAyB,KAAKtH,EAA9B,CAAhB;EACD,CA1HH;EAAAe,OA4HEwL,sBA5HF,GA4HE,gCAAuBE,YAAvB;IACE,KAAKnF,QAAL,GAAgBmF,YAAhB;IACA,KAAKjH,KAAL,CAAWkH,gBAAX,IAA+B,KAAKlH,KAAL,CAAWkH,gBAAX,CAA4B,KAAKpF,QAAjC,CAA/B;IACA,KAAK9B,KAAL,CAAWmH,QAAX,IAAuB,KAAKnH,KAAL,CAAWmH,QAAX,CAAoB,IAApB,CAAvB;EACD,CAhIH;EAAA5L,OAkIEuK,iBAlIF,GAkIE,2BAAkBpH,MAAlB;IACE,KAAKA,MAAL,GAAcD,oBAAoB,CAACC,MAAD,CAAlC;EACD,CApIH;EAAAnD,OAsIE6L,cAtIF,GAsIE,wBAAe/F,MAAf;IACE,IAAI,CAAC,KAAKoC,MAAV,EAAkB,OAAO,IAAP;IAElB,IAAM4D,UAAU,GAAG,KAAKpH,UAAL,KAAoBhG,UAAU,CAAC4G,QAAlD;IACA,IAAM4F,aAAa,GAAG,KAAKnF,QAAL,KAAkB,IAAxC;;IAEA,IAAMX,KAAK,GAAG0G,UAAU,GAAG,KAAK5D,MAAL,CAAYrK,MAAf,GAAwB,KAAKqK,MAAL,CAAYtK,MAA5D;IACA,IAAMyH,GAAG,GAAGyG,UAAU,GAAG,KAAK5D,MAAL,CAAYnK,IAAf,GAAsB,KAAKmK,MAAL,CAAYpK,IAAxD;IACA,IAAMiO,KAAK,GAAGD,UAAU,GAAG,KAAK5D,MAAL,CAAYjK,MAAf,GAAwB,KAAKiK,MAAL,CAAYlK,MAA5D;IACA,IAAMgO,CAAC,GAAGF,UAAU,GAAGhG,MAAM,CAACiC,CAAV,GAAcjC,MAAM,CAACgC,CAAzC;;IAGA,IAAMmD,YAAY,GAAGpF,eAAe,CAACT,KAAD,EAAQC,GAAR,EAAa2G,CAAb,CAApC;IACA,KAAKhB,sBAAL,CAA4BC,YAA5B;;IAGA,IAAIA,YAAJ,EAAkB;MAChB,IAAMS,YAAY,GAAGlG,iBAAiB,CAACJ,KAAD,EAAQ2G,KAAR,EAAeC,CAAf,EAAkB,KAAK7I,MAAvB,CAAtC;MACA,KAAKqI,sBAAL,CAA4BE,YAA5B;MACA,KAAKZ,iBAAL;IACD,CAJD,MAIO,IAAII,aAAJ,EAAmB;MACxB;MACA,KAAK3E,QAAL,GAAgB4D,KAAK,CACnB3B,IAAI,CAAC+C,KAAL,CAAW/F,iBAAiB,CAACJ,KAAD,EAAQ2G,KAAR,EAAeC,CAAf,EAAkB,KAAK7I,MAAvB,CAA5B,CADmB,EAEnB,CAFmB,EAGnB,CAHmB,CAArB;MAKA,KAAK2H,iBAAL;IACD;IAED,OAAO,IAAP;EACD,CArKH;EAAA;AAAA;IC3BamB,IAAb;EAOE,cAAYC,MAAZ;IAOE,KAAK9M,eAAL,GAAuB8M,MAAM,CAAC9M,eAA9B;IACA,KAAKQ,KAAL,GAAasM,MAAM,CAACtM,KAApB;IACA,KAAKF,MAAL,GAAcwM,MAAM,CAACxM,MAArB;IACA,KAAKsI,YAAL,GAAoBkE,MAAM,CAAClE,YAA3B;IACA,KAAKC,WAAL,GAAmBiE,MAAM,CAACjE,WAA1B;EACD;EAnBH;EAAAjI,OAqBEmM,UArBF,GAqBE,oBAAW5I,MAAX;IACE,IACEA,MAAM,CAAC3D,KAAP,KAAiB,KAAKA,KAAtB,IACA2D,MAAM,CAAC7D,MAAP,KAAkB,KAAKA,MADvB,IAEA6D,MAAM,CAAC0E,WAAP,KAAuB,KAAKA,WAF5B,IAGA1E,MAAM,CAACyE,YAAP,KAAwB,KAAKA,YAJ/B,EAKE;MACA,OAAO,IAAP;IACD;IACD,OAAO,KAAP;EACD,CA/BH;EAAAhI,OAiCEoM,OAjCF,GAiCE,iBAAQ7I,MAAR;IACE,KAAK3D,KAAL,GAAa2D,MAAM,CAAC3D,KAApB;IACA,KAAKF,MAAL,GAAc6D,MAAM,CAAC7D,MAArB;IACA,KAAKsI,YAAL,GAAoBzE,MAAM,CAACyE,YAA3B;IACA,KAAKC,WAAL,GAAmB1E,MAAM,CAAC0E,WAA1B;IACA,OAAO,IAAP;EACD,CAvCH;EAAA;AAAA;ICNaoE,MAAb;EAME,gBAAYvE,CAAZ,EAAuBC,CAAvB;IACE,KAAKD,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;IACA,KAAKuE,EAAL,GAAU,CAAV;IACA,KAAKC,EAAL,GAAU,CAAV;EACD;EAXH;EAAAvM,OAaEwM,SAbF,GAaE,mBAAU1E,CAAV,EAAqBC,CAArB;IACE,KAAKuE,EAAL,GAAUxE,CAAC,GAAG,KAAKA,CAAnB;IACA,KAAKyE,EAAL,GAAUxE,CAAC,GAAG,KAAKA,CAAnB;IACA,KAAKD,CAAL,GAASA,CAAT;IACA,KAAKC,CAAL,GAASA,CAAT;IACA,OAAO,IAAP;EACD,CAnBH;EAAA;AAAA;SCAgB0E;EACd,IAAIC,qBAAqB,GAAG,KAA5B;EACA,IAAI;IACF,IAAMC,IAAI,GAAGlJ,MAAM,CAACmJ,cAAP,CAAsB,EAAtB,EAA0B,SAA1B,EAAqC;MAChDC,GADgD;QAE9CH,qBAAqB,GAAG,IAAxB;QACA,OAAO,IAAP;MACD;IAJ+C,CAArC,CAAb,CADE;;IAQFzD,MAAM,CAAC6D,gBAAP,CAAwB,MAAxB,EAAgC,IAAhC,EAAsCH,IAAtC,EARE;;IAUF1D,MAAM,CAAC8D,mBAAP,CAA2B,MAA3B,EAAmC,IAAnC,EAAyCJ,IAAzC;EACD,CAXD,CAWE,OAAOK,CAAP,EAAU;EACZ,OAAON,qBAAP;AACD;;ACDD;;;;;;;;;AASA,IAAaO,kBAAb;EA2BE;+BACEvI;MAAAA,0CAAahG,UAAU,CAAC4G;MACxBlG;IAEA,KAAKsF,UAAL,GAAkBA,UAAlB;;IAEA,KAAKwI,QAAL,GAAgB,EAAhB;IAEA,KAAKC,mBAAL,GAA2B,CAAC,CAAC/N,eAA7B;IACA,KAAKgO,MAAL,GAAchO,eAAd,WAAcA,eAAd,GAAiC6J,MAAjC;;IAGA,4BAAe,KAAKoE,kBAAL,EAAf;MAAOvF,CAAP;MAAUC,CAAV;IACA,KAAKjC,MAAL,GAAc,IAAIuG,MAAJ,CAAWvE,CAAX,EAAcC,CAAd,CAAd;IAEA,KAAK5I,IAAL,GAAY,IAAI8M,IAAJ,CAAS;MACnBrM,KAAK,EAAE,CADY;MAEnBF,MAAM,EAAE,CAFW;MAGnBuI,WAAW,EAAE,CAHM;MAInBD,YAAY,EAAE,CAJK;MAKnB5I,eAAe,EAAE,KAAK+N,mBAAL,GAA2B/N,eAA3B,GAA6CkO;IAL3C,CAAT,CAAZ;;IASA,KAAKC,QAAL,GAAgB,KAAhB;;IAGA,KAAKC,gBAAL,GAAwBf,oBAAoB,EAA5C;;IAGA,KAAKgB,eAAL;IACA,KAAKC,aAAL,CAAmB,KAAKN,MAAxB;IACA,KAAKO,kBAAL;IACA,KAAKC,YAAL;EACD;EAlDD;;;;;EAXFX,mBAeSY,IAfT,GAeE,cAAY9O,OAAZ;IACE,IAAM+O,SAAS,GAAG,OAAO7E,MAAP,KAAkB,WAApC;IAEA,IAAI,CAAC6E,SAAL,EAAgB;MACd,MAAM,IAAI/M,KAAJ,CACJ,0GADI,CAAN;IAGD;IAED,OAAO,IAAIkM,kBAAJ,CAAuBlO,OAAvB,CAAP;EACD,CAzBH;EAAA;EAAAiB,OA+DEyN,eA/DF,GA+DE;;IACE,CACE,eADF,EAEE,kBAFF,EAGE,oBAHF,EAIE,eAJF,EAKE,oBALF,EAME,oBANF,EAOE,wBAPF,EAQE,cARF,EASE,oBATF,EAUE,wBAVF,EAWE,gBAXF,EAYE,aAZF,EAaE,eAbF,EAcE,mBAdF,EAeE,oBAfF,EAgBE,wBAhBF,EAiBE,QAjBF,EAkBE,uBAlBF,EAmBE,SAnBF,EAoBE7I,OApBF,CAoBU,UAACmJ,MAAD;MACR;MACAC,KAAI,CAACD,MAAD,CAAJ,GAAeC,KAAI,CAACD,MAAD,CAAJ,CAAaE,IAAb,CAAkBD,KAAlB,CAAf;IACD,CAvBD;EAwBD,CAxFH;EAAAhO,OA0FE0N,aA1FF,GA0FE,uBAAczO,EAAd;IACEA,EAAE,CAAC6N,gBAAH,CACE,QADF,EAEE,KAAKoB,aAFP,EAGE,KAAKV,gBAAL,GAAwB;MAAEW,OAAO,EAAE;IAAX,CAAxB,GAA4C,KAH9C;IAKAlF,MAAM,CAAC6D,gBAAP,CAAwB,QAAxB,EAAkC,KAAKsB,kBAAvC,EAA2D,KAA3D;IACAnF,MAAM,CAAC6D,gBAAP,CAAwB,MAAxB,EAAgC,KAAKsB,kBAArC,EAAyD,KAAzD;IACAnF,MAAM,CAAC6D,gBAAP,CAAwB,OAAxB,EAAiC,KAAKsB,kBAAtC,EAA0D,KAA1D;IACAnF,MAAM,CAAC6D,gBAAP,CAAwB,MAAxB,EAAgC,KAAKsB,kBAArC,EAAyD,KAAzD;EACD,CApGH;EAAApO,OAsGEqO,gBAtGF,GAsGE,0BAAiBpP,EAAjB;;IACEA,EAAE,CAAC8N,mBAAH,CAAuB,QAAvB,EAAiC,KAAKmB,aAAtC,EAAqD,KAArD;IACAjF,MAAM,CAAC8D,mBAAP,CAA2B,QAA3B,EAAqC,KAAKqB,kBAA1C,EAA8D,KAA9D;IACAnF,MAAM,CAAC8D,mBAAP,CAA2B,MAA3B,EAAmC,KAAKqB,kBAAxC,EAA4D,KAA5D;IACAnF,MAAM,CAAC8D,mBAAP,CAA2B,OAA3B,EAAoC,KAAKqB,kBAAzC,EAA6D,KAA7D;IACAnF,MAAM,CAAC8D,mBAAP,CAA2B,MAA3B,EAAmC,KAAKqB,kBAAxC,EAA4D,KAA5D;IACA,8BAAKE,eAAL,2CAAsBC,UAAtB;EACD,CA7GH;EAAAvO,OA+GE2N,kBA/GF,GA+GE;;IACE,IAAI;MACF,IAAMa,UAAU,GAAgB,KAAKrB,mBAAL,GAC3B,KAAKC,MADsB,GAE5BqB,QAAQ,CAACC,eAFb;MAGA,KAAKJ,eAAL,GAAuB,IAAIK,cAAJ,CAAmB;QAAA,OAAMC,MAAI,CAACC,MAAL,EAAN;MAAA,CAAnB,CAAvB;MACA,KAAKP,eAAL,CAAqBQ,OAArB,CAA6BN,UAA7B;IACD,CAND,CAME,OAAOxB,CAAP,EAAU;MACV+B,OAAO,CAACC,IAAR,CACE,+DADF;IAGD;EACF,CA3HH;EAAAhP,OA6HEqN,kBA7HF,GA6HE;IACE;IACA;IACA,IAAM4B,EAAE,GAAG,KAAK9B,mBAAL;IAAA;IAEP,KAAKC,MAAL,CAAY8B,UAFL,GAGPjG,MAAM,CAACkG,WAHX;IAIA,IAAMC,EAAE,GAAG,KAAKjC,mBAAL;IAAA;IAEP,KAAKC,MAAL,CAAYiC,SAFL,GAGPpG,MAAM,CAACqG,WAHX;IAKA,OAAO,CAACL,EAAD,EAAKG,EAAL,CAAP;EACD;EAED;;;KAAA;EA5IFpP,OAgJEkO,aAhJF,GAgJE;IACE,6BAAiB,KAAKb,kBAAL,EAAjB;MAAO4B,EAAP;MAAWG,EAAX;IACA,KAAKtJ,MAAL,CAAY0G,SAAZ,CAAsByC,EAAtB,EAA0BG,EAA1B;IAGA;;IACA,IAAI,CAAC,KAAK7B,QAAN,IAAkB,KAAKL,QAAL,CAAcqC,MAAd,GAAuB,CAA7C,EAAgD;MAC9C,KAAKhC,QAAL,GAAgB,IAAhB,CAD8C;;MAG9CtE,MAAM,CAACuG,qBAAP,CAA6B,KAAKC,kBAAlC;IACD;EACF;EAED;;;KAAA;EA7JFzP,OAiKEoO,kBAjKF,GAiKE;IACE,KAAKR,YAAL;IACA,KAAK6B,kBAAL,CAAwB;MAAEC,WAAW,EAAE;IAAf,CAAxB;EACD;EAED;;;;KAAA;EAtKF1P,OA2KEyP,kBA3KF,GA2KE;;mCAAgE;MAA3CC;IACnB,IAAI,KAAKxC,QAAT,EAAmB;MACjB,KAAKA,QAAL,CAActI,OAAd,CAAsB,iBAAO;QAC3B,IAAI8K,WAAJ,EAAiB;UACf/H,OAAO,CAAC+C,mBAAR,CAA4BiF,MAAI,CAACxQ,IAAjC,EAAuCwQ,MAAI,CAAC7J,MAA5C;QACD;QACD6J,MAAI,CAACC,sBAAL,CAA4BjI,OAA5B;MACD,CALD;IAMD;;IAED,KAAK4F,QAAL,GAAgB,KAAhB;EACD;EAED;;;;KAAA;EAxLFvN,OA6LE4P,sBA7LF,GA6LE,gCAAuBjI,OAAvB;IACE,IAAIA,OAAO,CAAClD,KAAR,CAAcgH,QAAlB,EAA4B;IAC5B9D,OAAO,CAACkE,cAAR,CAAuB,KAAK/F,MAA5B;EACD;EAED;;KAAA;EAlMF9F,OAqME6P,cArMF,GAqME;IAME,IAAI,KAAK1C,mBAAT,EAA8B;MAC5B;MACA,IAAMvN,MAAK,GAAG,KAAKwN,MAAL,CAAYvN,WAA1B,CAF4B;;MAI5B,IAAMH,OAAM,GAAG,KAAK0N,MAAL,CAAYzN,YAA3B,CAJ4B;;MAM5B,IAAMqI,aAAY,GAAG,KAAKoF,MAAL,CAAYpF,YAAjC,CAN4B;;MAQ5B,IAAMC,YAAW,GAAG,KAAKmF,MAAL,CAAYnF,WAAhC;MACA,OAAO,KAAK9I,IAAL,CAAUiN,OAAV,CAAkB;QACvBxM,KAAK,EAALA,MADuB;QAEvBF,MAAM,EAANA,OAFuB;QAGvBsI,YAAY,EAAZA,aAHuB;QAIvBC,WAAW,EAAXA;MAJuB,CAAlB,CAAP;IAMD;IAED,IAAM6H,IAAI,GAAGrB,QAAQ,CAACC,eAAtB;IACA,IAAM9O,KAAK,GAAGqJ,MAAM,CAACC,UAAP,IAAqB4G,IAAI,CAACC,WAAxC;IACA,IAAMrQ,MAAM,GAAGuJ,MAAM,CAACE,WAAP,IAAsB2G,IAAI,CAACE,YAA1C;IACA,IAAMhI,YAAY,GAAG8H,IAAI,CAAC9H,YAA1B;IACA,IAAMC,WAAW,GAAG6H,IAAI,CAAC7H,WAAzB;IAEA,OAAO;MAAErI,KAAK,EAALA,KAAF;MAASF,MAAM,EAANA,MAAT;MAAiBsI,YAAY,EAAZA,YAAjB;MAA+BC,WAAW,EAAXA;IAA/B,CAAP;EACD;EAED;;KAAA;EArOFjI,OAwOE4N,YAxOF,GAwOE;IACE,OAAO,KAAKzO,IAAL,CAAUiN,OAAV,CAAkB,KAAKyD,cAAL,EAAlB,CAAP;EACD;EAED;;;KAAA;EA5OF7P,OAgPEiQ,sBAhPF,GAgPE;IACE,OAAO,KAAK9Q,IAAL,CAAUgN,UAAV,CAAqB,KAAK0D,cAAL,EAArB,CAAP;EACD;EAED;;;;;;EAMA;;KAAA;EA1PF7P,OA6PEkQ,WA7PF,GA6PE;IACE,OAAO,KAAKhD,QAAZ;EACD;EAED;;KAAA;EAjQFlN,OAoQEmQ,aApQF,GAoQE,uBAAcpR,OAAd;IACE,IAAMqR,UAAU,GAAG,IAAI9F,OAAJ,cACdvL,OADc;MAEjB2F,UAAU,EAAE,KAAKA;IAFA,GAAnB;IAIA0L,UAAU,CAAC1F,mBAAX,CAA+B,KAAKvL,IAApC,EAA0C,KAAK2G,MAA/C;IACA,KAAKoH,QAAL,GAAgB,KAAKA,QAAL,aACR,KAAKA,QADG,GACOkD,UADP,KAEZ,CAACA,UAAD,CAFJ;IAGA,KAAKR,sBAAL,CAA4BQ,UAA5B;IAGA;IACA;;IACA,IAAI,KAAKH,sBAAL,EAAJ,EAAmC;MACjC,KAAKpB,MAAL;IACD;IACD,OAAOuB,UAAP;EACD;EAED;;KAAA;EAxRFpQ,OA2REqQ,iBA3RF,GA2RE,2BAAkBzR,EAAlB;IACE,IAAI,CAAC,KAAKsO,QAAV,EAAoB;IACpB,KAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAczG,MAAd,CAAqB,YAAE;MAAA,OAAIxH,EAAE,CAACL,EAAH,KAAUA,EAAd;IAAA,CAAvB,CAAhB;EACD;EAED;;KAAA;EAhSFoB,OAmSEsQ,sBAnSF,GAmSE,gCAAuB1R,EAAvB,EAAmC6F,KAAnC;IACE,IAAI,KAAKyI,QAAT,EAAmB;MACjB,KAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAcqD,GAAd,CAAkB,YAAE;QAClC,IAAItR,EAAE,CAACL,EAAH,KAAUA,EAAd,EAAkB;UAChB,OAAOK,EAAE,CAACuL,WAAH,CAAe/F,KAAf,CAAP;QACD;QACD,OAAOxF,EAAP;MACD,CALe,CAAhB;IAMD;IAED,KAAK4P,MAAL;EACD;EAED;;KAAA;EAhTF7O,OAmTEwQ,kBAnTF,GAmTE,4BAAmB7I,OAAnB;IACED,WAAW,CAACC,OAAD,CAAX;EACD;EAED;;KAAA;EAvTF3H,OA0TE6O,MA1TF,GA0TE;IACE;IACA;IACA,6BAAiB,KAAKxB,kBAAL,EAAjB;MAAO4B,EAAP;MAAWG,EAAX;IACA,KAAKtJ,MAAL,CAAY0G,SAAZ,CAAsByC,EAAtB,EAA0BG,EAA1B;IAEA,KAAKxB,YAAL;IACA,KAAK6B,kBAAL,CAAwB;MAAEC,WAAW,EAAE;IAAf,CAAxB;EACD;EACD;;KAAA;EAnUF1P,OAsUEyQ,qBAtUF,GAsUE,+BAAsBxR,EAAtB;IACE;IACA,KAAKoP,gBAAL,CAAsB,KAAKjB,MAA3B;IAEA,KAAKA,MAAL,GAAcnO,EAAd;IACA,KAAKkO,mBAAL,GAA2B,CAAC,CAAClO,EAA7B;IACA,KAAKE,IAAL,GAAY,IAAI8M,IAAJ,CAAS;MACnBrM,KAAK,EAAE,CADY;MAEnBF,MAAM,EAAE,CAFW;MAGnBuI,WAAW,EAAE,CAHM;MAInBD,YAAY,EAAE,CAJK;MAKnB5I,eAAe,EAAEH;IALE,CAAT,CAAZ;IAOA,KAAK2O,YAAL;IACA,KAAKF,aAAL,CAAmB,KAAKN,MAAxB;IACA,KAAKqC,kBAAL,CAAwB;MAAEC,WAAW,EAAE;IAAf,CAAxB;EACD;EAED;;KAAA;EAxVF1P,OA2VE0Q,kBA3VF,GA2VE;IACE,IAAI,KAAKxD,QAAT,EAAmB;MACjB,KAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAcqD,GAAd,CAAkB,YAAE;QAClC,OAAOtR,EAAE,CAACuL,WAAH,CAAe;UAAEiB,QAAQ,EAAE;QAAZ,CAAf,CAAP;MACD,CAFe,CAAhB;IAGD;IACD,KAAKoD,MAAL;EACD;EAED;;KAAA;EApWF7O,OAuWE2Q,iBAvWF,GAuWE;IACE,IAAI,KAAKzD,QAAT,EAAmB;MACjB,KAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAcqD,GAAd,CAAkB,YAAE;QAClC,OAAOtR,EAAE,CAACuL,WAAH,CAAe;UAAEiB,QAAQ,EAAE;QAAZ,CAAf,CAAP;MACD,CAFe,CAAhB;IAGD;IACD,KAAKoD,MAAL;EACD;EAED;;KAAA;EAhXF7O,OAmXE4Q,OAnXF,GAmXE;IACE,KAAKvC,gBAAL,CAAsB,KAAKjB,MAA3B;IACA,IAAI,KAAKF,QAAT,EAAmB;MACjB,KAAKA,QAAL,CAActI,OAAd,CAAsB,iBAAO;QAAA,OAAI8C,WAAW,CAACC,OAAD,CAAf;MAAA,CAA7B;IACD;;IAED,KAAKuF,QAAL,GAAgBI,SAAhB;EACD,CA1XH;EAAA;AAAA","names":["Limits","properties","startX","startY","endX","endY","totalX","totalY","startMultiplierX","endMultiplierX","startMultiplierY","endMultiplierY","ValidCSSEffects","Units","RotationUnits","ScaleUnits","ScrollAxis","EasingPreset","id","createId","Rect","options","rect","el","getBoundingClientRect","view","scrollContainer","scrollRect","top","right","left","bottom","height","offsetHeight","width","offsetWidth","rootMargin","_setRectWithRootMargin","_proto","totalRootY","totalRootX","VALID_UNITS","px","deg","turn","rad","parseValueAndUnit","str","defaultUnit","out","value","unit","isValid","Error","String","parseFloat","match","isValidUnit","includes","easingPresets","ease","easeIn","easeOut","easeInOut","easeInQuad","easeInCubic","easeInQuart","easeInQuint","easeInSine","easeInExpo","easeInCirc","easeOutQuad","easeOutCubic","easeOutQuart","easeOutQuint","easeOutSine","easeOutExpo","easeOutCirc","easeInOutQuad","easeInOutCubic","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInOutExpo","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","createEasingFunction","easing","Array","isArray","bezier","params","PARALLAX_EFFECTS","Object","values","MAP_EFFECT_TO_DEFAULT_UNIT","speed","translateX","translateY","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","opacity","parseElementTransitionEffects","props","scrollAxis","parsedEffects","forEach","key","defaultValue","startSpeed","endSpeed","startParsed","endParsed","speedConfig","start","end","vertical","horizontal","getProgressAmount","totalDist","currentScroll","startAdjustedScroll","amount","isElementInView","scroll","isInView","scaleBetween","newMin","newMax","oldMin","oldMax","scaleEffectByProgress","effect","progress","TRANSFORM_EFFECTS","filter","v","setWillChangeStyles","effects","keys","hasOpacity","willChange","style","setElementStyles","transform","getTransformStyles","getOpacityStyles","scaledOpacity","styleStr","reduce","acc","scaledEffect","resetStyles","element","createLimitsForRelativeElements","shouldAlwaysCompleteAnimation","x","y","scrollHeight","scrollWidth","limits","getTranslateScalar","startTranslatePx","endTranslatePx","slow","totalAbsOff","Math","abs","totalDistTrue","max","getStartEndValueInPx","translate","elementSize","startScale","endScale","window","innerWidth","innerHeight","DEFAULT_VALUE","createLimitsWithTranslationsForRelativeElements","startTranslateXPx","endTranslateXPx","startTranslateYPx","endTranslateYPx","topBeginsInView","leftBeginsInView","bottomEndsInView","rightEndsInView","scaleTranslateEffectsForSlowerScroll","effectsCopy","getShouldScaleTranslateEffects","targetElement","shouldDisableScalingTranslations","clamp","num","min","Element","_setElementEasing","updateProps","nextProps","setCachedAttributes","shouldScaleTranslateEffects","startScroll","endScroll","_setElementStyles","scaledEffects","_updateElementIsInView","nextIsInView","isFirstChange","onEnter","_setFinalProgress","onExit","finalProgress","round","_updateElementProgress","disabled","nextProgress","onProgressChange","onChange","updatePosition","isVertical","total","s","View","config","hasChanged","setSize","Scroll","dx","dy","setScroll","testForPassiveScroll","supportsPassiveOption","opts","defineProperty","get","addEventListener","removeEventListener","e","ParallaxController","elements","_hasScrollContainer","viewEl","_getScrollPosition","undefined","_ticking","_supportsPassive","_bindAllMethods","_addListeners","_addResizeObserver","_setViewSize","init","hasWindow","method","_this","bind","_handleScroll","passive","_handleUpdateCache","_removeListeners","_resizeObserver","disconnect","observedEl","document","documentElement","ResizeObserver","_this2","update","observe","console","warn","nx","scrollLeft","pageXOffset","ny","scrollTop","pageYOffset","length","requestAnimationFrame","_updateAllElements","updateCache","_this3","_updateElementPosition","_getViewParams","html","clientWidth","clientHeight","_checkIfViewHasChanged","getElements","createElement","newElement","removeElementById","updateElementPropsById","map","resetElementStyles","updateScrollContainer","disableAllElements","enableAllElements","destroy"],"sources":["/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/Limits.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/types.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/utils/createId.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/Rect.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/utils/parseValueAndUnit.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/constants.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/createEasingFunction.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/parseElementTransitionEffects.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/getProgressAmount.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/isElementInView.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/utils/scaleBetween.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/scaleEffectByProgress.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/elementStyles.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/createLimitsForRelativeElements.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/getTranslateScalar.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/getStartEndValueInPx.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/createLimitsWithTranslationsForRelativeElements.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/scaleTranslateEffectsForSlowerScroll.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/getShouldScaleTranslateEffects.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/helpers/clamp.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/Element.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/View.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/Scroll.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/utils/testForPassiveScroll.ts","/home/roan/tanuarta.github.io/tanuarta/node_modules/parallax-controller/src/classes/ParallaxController.ts"],"sourcesContent":["export type LimitOptions = {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n  startMultiplierX?: number;\n  endMultiplierX?: number;\n  startMultiplierY?: number;\n  endMultiplierY?: number;\n};\n\nexport class Limits {\n  startX: number;\n  startY: number;\n  endX: number;\n  endY: number;\n  totalX: number;\n  totalY: number;\n  startMultiplierX: number;\n  endMultiplierX: number;\n  startMultiplierY: number;\n  endMultiplierY: number;\n\n  constructor(properties: LimitOptions) {\n    this.startX = properties.startX;\n    this.startY = properties.startY;\n    this.endX = properties.endX;\n    this.endY = properties.endY;\n    // Used to calculate the progress of the element\n    this.totalX = this.endX - this.startX;\n    this.totalY = this.endY - this.startY;\n\n    // Used to scale translate effects\n    this.startMultiplierX = properties.startMultiplierX || 1;\n    this.endMultiplierX = properties.endMultiplierX || 1;\n    this.startMultiplierY = properties.startMultiplierY || 1;\n    this.endMultiplierY = properties.endMultiplierY || 1;\n  }\n}\n","import { EasingFunction } from 'bezier-easing';\nimport { Element } from './classes/Element';\n\nexport type ParallaxStartEndEffects = {\n  translateX?: ParsedValueEffect;\n  translateY?: ParsedValueEffect;\n  rotate?: ParsedValueEffect;\n  rotateX?: ParsedValueEffect;\n  rotateY?: ParsedValueEffect;\n  rotateZ?: ParsedValueEffect;\n  scale?: ParsedValueEffect;\n  scaleX?: ParsedValueEffect;\n  scaleY?: ParsedValueEffect;\n  scaleZ?: ParsedValueEffect;\n  opacity?: ParsedValueEffect;\n};\n\nexport enum ValidCSSEffects {\n  'speed' = 'speed',\n  'translateX' = 'translateX',\n  'translateY' = 'translateY',\n  'rotate' = 'rotate',\n  'rotateX' = 'rotateX',\n  'rotateY' = 'rotateY',\n  'rotateZ' = 'rotateZ',\n  'scale' = 'scale',\n  'scaleX' = 'scaleX',\n  'scaleY' = 'scaleY',\n  'scaleZ' = 'scaleZ',\n  'opacity' = 'opacity',\n}\n\nexport enum Units {\n  'px' = 'px',\n  '%' = '%',\n  'vh' = 'vh',\n  'vw' = 'vw',\n}\nexport type ValidUnits = keyof typeof Units;\n\nexport enum RotationUnits {\n  'deg' = 'deg',\n  'turn' = 'turn',\n  'rad' = 'rad',\n}\n\nexport enum ScaleUnits {\n  '' = '',\n}\n\nexport type ValidScaleUnits = keyof typeof ScaleUnits;\n\nexport type ValidRotationUnits = keyof typeof RotationUnits;\n\nexport type AllValidUnits = ValidUnits | ValidRotationUnits | ValidScaleUnits;\n\nexport enum ScrollAxis {\n  'vertical' = 'vertical',\n  'horizontal' = 'horizontal',\n}\n\nexport type ValidScrollAxis = keyof typeof ScrollAxis;\n\nexport type ParsedValueShape = {\n  value: number;\n  unit: AllValidUnits;\n};\n\nexport type ParsedValueEffect = {\n  start: number;\n  end: number;\n  unit: AllValidUnits;\n  easing?: EasingFunction;\n};\n\nexport type ViewElement = HTMLElement | Window;\nexport type ParallaxControllerOptions = {\n  scrollAxis?: ValidScrollAxis;\n  scrollContainer?: HTMLElement;\n};\n\nexport type EffectNumber = [number, number, EasingParam?];\nexport type EffectString = [string, string, EasingParam?];\nexport type EasingParam = ValidEasingPresets | EasingParams;\nexport type CSSEffect = EffectNumber | EffectString;\nexport type ScaleOpacityEffect = EffectNumber;\n\nexport type ParallaxElementConfig = {\n  speed?: number;\n  disabled?: boolean;\n  translateX?: CSSEffect;\n  translateY?: CSSEffect;\n  rotate?: CSSEffect;\n  rotateX?: CSSEffect;\n  rotateY?: CSSEffect;\n  rotateZ?: CSSEffect;\n  scale?: ScaleOpacityEffect;\n  scaleX?: ScaleOpacityEffect;\n  scaleY?: ScaleOpacityEffect;\n  scaleZ?: ScaleOpacityEffect;\n  opacity?: ScaleOpacityEffect;\n  easing?: EasingParams | ValidEasingPresets;\n  rootMargin?: RootMarginShape;\n  /* Always start and end animations at the given effect values - if the element is positioned inside the view when scroll is at zero or ends in view at final scroll position, the initial and final positions are used to determine progress instead of the scroll view size */\n  shouldAlwaysCompleteAnimation?: boolean;\n  /* Disable scaling translations - translate effects that cause the element to appear in the view longer must be scaled up so that animation doesn't end early */\n  shouldDisableScalingTranslations?: boolean;\n\n  startScroll?: number;\n  endScroll?: number;\n  targetElement?: HTMLElement;\n\n  onEnter?: (element: Element) => any;\n  onExit?: (element: Element) => any;\n  onChange?: (element: Element) => any;\n  onProgressChange?: (progress: number) => any;\n};\n\nexport type CreateElementOptions = {\n  el: HTMLElement;\n  props: ParallaxElementConfig;\n};\n\nexport type EasingParams = [number, number, number, number];\n\nexport enum EasingPreset {\n  ease = 'ease',\n  easeIn = 'easeIn',\n  easeOut = 'easeOut',\n  easeInOut = 'easeInOut',\n  easeInQuad = 'easeInQuad',\n  easeInCubic = 'easeInCubic',\n  easeInQuart = 'easeInQuart',\n  easeInQuint = 'easeInQuint',\n  easeInSine = 'easeInSine',\n  easeInExpo = 'easeInExpo',\n  easeInCirc = 'easeInCirc',\n  easeOutQuad = 'easeOutQuad',\n  easeOutCubic = 'easeOutCubic',\n  easeOutQuart = 'easeOutQuart',\n  easeOutQuint = 'easeOutQuint',\n  easeOutSine = 'easeOutSine',\n  easeOutExpo = 'easeOutExpo',\n  easeOutCirc = 'easeOutCirc',\n  easeInOutQuad = 'easeInOutQuad',\n  easeInOutCubic = 'easeInOutCubic',\n  easeInOutQuart = 'easeInOutQuart',\n  easeInOutQuint = 'easeInOutQuint',\n  easeInOutSine = 'easeInOutSine',\n  easeInOutExpo = 'easeInOutExpo',\n  easeInOutCirc = 'easeInOutCirc',\n  easeInBack = 'easeInBack',\n  easeOutBack = 'easeOutBack',\n  easeInOutBack = 'easeInOutBack',\n}\n\nexport type ValidEasingPresets = keyof typeof EasingPreset;\n\nexport type RootMarginShape = {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n};\n","/**\n * Creates a unique id to distinguish parallax elements.\n */\n\nlet id = 0;\n\nexport function createId(): number {\n  ++id;\n  return id;\n}\n","import { View } from './View';\nimport { RootMarginShape } from '../types';\n\nexport class Rect {\n  height: number;\n  width: number;\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n\n  constructor(options: {\n    el: HTMLElement;\n    view: View;\n    rootMargin?: RootMarginShape;\n  }) {\n    let rect = options.el.getBoundingClientRect();\n\n    // rect is based on viewport -- must adjust for relative scroll container\n    if (options.view.scrollContainer) {\n      const scrollRect = options.view.scrollContainer.getBoundingClientRect();\n      rect = {\n        ...rect,\n        top: rect.top - scrollRect.top,\n        right: rect.right - scrollRect.left,\n        bottom: rect.bottom - scrollRect.top,\n        left: rect.left - scrollRect.left,\n      };\n    }\n    this.height = options.el.offsetHeight;\n    this.width = options.el.offsetWidth;\n    this.left = rect.left;\n    this.right = rect.right;\n    this.top = rect.top;\n    this.bottom = rect.bottom;\n\n    if (options.rootMargin) {\n      this._setRectWithRootMargin(options.rootMargin);\n    }\n  }\n\n  /**\n   * Apply root margin to all properties\n   */\n  _setRectWithRootMargin(rootMargin: RootMarginShape) {\n    let totalRootY = rootMargin.top + rootMargin.bottom;\n    let totalRootX = rootMargin.left + rootMargin.right;\n    this.top -= rootMargin.top;\n    this.right += rootMargin.right;\n    this.bottom += rootMargin.bottom;\n    this.left -= rootMargin.left;\n    this.height += totalRootY;\n    this.width += totalRootX;\n  }\n}\n","import {\n  ScaleUnits,\n  ParsedValueShape,\n  RotationUnits,\n  Units,\n  AllValidUnits,\n} from '../types';\n\nexport const VALID_UNITS = [\n  ScaleUnits[''],\n  Units.px,\n  Units['%'],\n  Units['vh'],\n  Units['vw'],\n  RotationUnits.deg,\n  RotationUnits.turn,\n  RotationUnits.rad,\n];\n\n/**\n * Determines the unit of a string and parses the value\n */\n\nexport function parseValueAndUnit(\n  str?: string | number,\n  defaultUnit: AllValidUnits = Units['%']\n): ParsedValueShape {\n  let out: ParsedValueShape = { value: 0, unit: defaultUnit };\n\n  if (typeof str === 'undefined') return out;\n\n  const isValid = typeof str === 'number' || typeof str === 'string';\n\n  if (!isValid) {\n    throw new Error(\n      'Invalid value provided. Must provide a value as a string or number'\n    );\n  }\n\n  str = String(str);\n  out.value = parseFloat(str);\n\n  // @ts-ignore\n  out.unit = str.match(/[\\d.\\-+]*\\s*(.*)/)[1] || defaultUnit;\n\n  // @ts-expect-error\n  const isValidUnit: boolean = VALID_UNITS.includes(out.unit);\n\n  if (!isValidUnit) {\n    throw new Error('Invalid unit provided.');\n  }\n\n  return out;\n}\n","import { ValidEasingPresets } from './types';\n\nexport type EasingPreset = { [key in ValidEasingPresets]: number[] };\n\nexport const easingPresets: EasingPreset = {\n  ease: [0.25, 0.1, 0.25, 1.0],\n  easeIn: [0.42, 0.0, 1.0, 1.0],\n  easeOut: [0.0, 0.0, 0.58, 1.0],\n  easeInOut: [0.42, 0.0, 0.58, 1.0],\n  /* Ease IN curves */\n  easeInQuad: [0.55, 0.085, 0.68, 0.53],\n  easeInCubic: [0.55, 0.055, 0.675, 0.19],\n  easeInQuart: [0.895, 0.03, 0.685, 0.22],\n  easeInQuint: [0.755, 0.05, 0.855, 0.06],\n  easeInSine: [0.47, 0.0, 0.745, 0.715],\n  easeInExpo: [0.95, 0.05, 0.795, 0.035],\n  easeInCirc: [0.6, 0.04, 0.98, 0.335],\n  /* Ease Out Curves */\n  easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n  easeOutCubic: [0.215, 0.61, 0.355, 1.0],\n  easeOutQuart: [0.165, 0.84, 0.44, 1.0],\n  easeOutQuint: [0.23, 1.0, 0.32, 1.0],\n  easeOutSine: [0.39, 0.575, 0.565, 1.0],\n  easeOutExpo: [0.19, 1.0, 0.22, 1.0],\n  easeOutCirc: [0.075, 0.82, 0.165, 1.0],\n  /* Ease IN Out Curves */\n  easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n  easeInOutCubic: [0.645, 0.045, 0.355, 1.0],\n  easeInOutQuart: [0.77, 0.0, 0.175, 1.0],\n  easeInOutQuint: [0.86, 0.0, 0.07, 1.0],\n  easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n  easeInOutExpo: [1.0, 0.0, 0.0, 1.0],\n  easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n  /* Ease Bounce Curves */\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55],\n};\n","import bezier, { EasingFunction } from 'bezier-easing';\nimport { ValidEasingPresets, EasingParams } from '../types';\nimport { easingPresets } from '../constants';\n\nexport function createEasingFunction(\n  easing: ValidEasingPresets | EasingParams | undefined\n): EasingFunction | undefined {\n  if (Array.isArray(easing)) {\n    return bezier(easing[0], easing[1], easing[2], easing[3]);\n  }\n  if (\n    typeof easing === 'string' &&\n    typeof easingPresets[easing] !== 'undefined'\n  ) {\n    const params: number[] = easingPresets[easing];\n    return bezier(params[0], params[1], params[2], params[3]);\n  }\n  return;\n}\n","import { CSSEffect, ScrollAxis, ValidScrollAxis } from '..';\nimport {\n  ParsedValueEffect,\n  ValidCSSEffects,\n  ParallaxElementConfig,\n  ParallaxStartEndEffects,\n  AllValidUnits,\n} from '../types';\nimport { parseValueAndUnit } from '../utils/parseValueAndUnit';\nimport { createEasingFunction } from './createEasingFunction';\n\nexport const PARALLAX_EFFECTS = Object.values(ValidCSSEffects);\n\nexport const MAP_EFFECT_TO_DEFAULT_UNIT: {\n  [key in ValidCSSEffects]: AllValidUnits;\n} = {\n  speed: 'px',\n  translateX: '%',\n  translateY: '%',\n  rotate: 'deg',\n  rotateX: 'deg',\n  rotateY: 'deg',\n  rotateZ: 'deg',\n  scale: '',\n  scaleX: '',\n  scaleY: '',\n  scaleZ: '',\n  opacity: '',\n};\n/**\n * Takes a parallax element effects and parses the properties to get the start and end values and units.\n */\nexport function parseElementTransitionEffects(\n  props: ParallaxElementConfig,\n  scrollAxis: ValidScrollAxis\n): ParallaxStartEndEffects {\n  const parsedEffects: { [key: string]: ParsedValueEffect } = {};\n\n  PARALLAX_EFFECTS.forEach((key: keyof typeof ValidCSSEffects) => {\n    const defaultValue: AllValidUnits = MAP_EFFECT_TO_DEFAULT_UNIT[key];\n\n    // If the provided type is a number, this must be the speed prop\n    // in which case we need to construct the proper translate config\n    if (typeof props?.[key] === 'number') {\n      const value = props?.[key] as number;\n      const startSpeed = `${(value || 0) * 10}px`;\n      const endSpeed = `${(value || 0) * -10}px`;\n\n      const startParsed = parseValueAndUnit(startSpeed);\n      const endParsed = parseValueAndUnit(endSpeed);\n\n      const speedConfig = {\n        start: startParsed.value,\n        end: endParsed.value,\n        unit: startParsed.unit,\n      };\n\n      // Manually set translate y value\n      if (scrollAxis === ScrollAxis.vertical) {\n        parsedEffects.translateY = speedConfig;\n      }\n\n      // Manually set translate y value\n      if (scrollAxis === ScrollAxis.horizontal) {\n        parsedEffects.translateX = speedConfig;\n      }\n    }\n\n    // The rest are standard effect being parsed\n    if (Array.isArray(props?.[key])) {\n      const value = props?.[key] as CSSEffect;\n\n      if (typeof value[0] !== 'undefined' && typeof value[1] !== 'undefined') {\n        const startParsed = parseValueAndUnit(value?.[0], defaultValue);\n        const endParsed = parseValueAndUnit(value?.[1], defaultValue);\n\n        const easing = createEasingFunction(value?.[2]);\n\n        parsedEffects[key] = {\n          start: startParsed.value,\n          end: endParsed.value,\n          unit: startParsed.unit,\n          easing,\n        };\n\n        if (startParsed.unit !== endParsed.unit) {\n          throw new Error(\n            'Must provide matching units for the min and max offset values of each axis.'\n          );\n        }\n      }\n    }\n  });\n\n  return parsedEffects;\n}\n","import bezier from 'bezier-easing';\n\n/**\n * Returns the percent (0 - 100) moved based on position in the viewport\n */\n\nexport function getProgressAmount(\n  /*\n   * The start value from cache\n   */\n  start: number,\n  /*\n   * total dist the element has to move to be 100% complete (view width/height + element width/height)\n   */\n  totalDist: number,\n  /*\n   * Current scroll value\n   */\n  currentScroll: number,\n  /*\n   * an optional easing function to apply\n   */\n  easing?: bezier.EasingFunction\n): number {\n  // adjust cached value\n  const startAdjustedScroll = currentScroll - start;\n\n  // Amount the element has moved based on current and total distance to move\n  let amount = startAdjustedScroll / totalDist;\n\n  // Apply bezier easing if provided\n  if (easing) {\n    amount = easing(amount);\n  }\n\n  return amount;\n}\n","/**\n * Takes two values (start, end) and returns whether the current scroll is within range\n * @param {number} start - start of scroll (x/y)\n * @param {number} end - end of scroll (x/y)\n * @param {number} scroll - current scroll (x/y)\n * @return {boolean} isInView\n */\n\nexport function isElementInView(\n  start: number,\n  end: number,\n  scroll: number\n): boolean {\n  const isInView = scroll >= start && scroll <= end;\n\n  return isInView;\n}\n","// Scale between AKA normalize\nexport function scaleBetween(\n  value: number,\n  newMin: number,\n  newMax: number,\n  oldMin: number,\n  oldMax: number\n) {\n  return ((newMax - newMin) * (value - oldMin)) / (oldMax - oldMin) + newMin;\n}\n","import { ParsedValueEffect } from '..';\nimport { AllValidUnits } from '../types';\nimport { scaleBetween } from '../utils/scaleBetween';\n\n/**\n * Scales a start and end value of an effect based on percent moved and easing function\n */\nexport function scaleEffectByProgress(\n  effect: ParsedValueEffect,\n  progress: number\n): {\n  value: number;\n  unit: AllValidUnits;\n} {\n  const value = scaleBetween(\n    typeof effect.easing === 'function' ? effect.easing(progress) : progress,\n    effect?.start || 0,\n    effect?.end || 0,\n    0,\n    1\n  );\n\n  return {\n    value,\n    unit: effect?.unit,\n  };\n}\n","import { Element } from '../classes/Element';\nimport { ParallaxStartEndEffects, ValidCSSEffects } from '../types';\nimport { scaleEffectByProgress } from './scaleEffectByProgress';\n\n// Exclude opacity from transforms\nconst TRANSFORM_EFFECTS = Object.values(ValidCSSEffects).filter(\n  v => v !== 'opacity'\n);\n\nexport function setWillChangeStyles(\n  el: HTMLElement,\n  effects: ParallaxStartEndEffects\n) {\n  const keys = Object.keys(effects);\n  const hasOpacity = keys.includes('opacity');\n  const willChange = `transform${hasOpacity ? ',opacity' : ''}`;\n  el.style.willChange = willChange;\n}\n\nexport function setElementStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number,\n  el?: HTMLElement\n) {\n  if (!el) return;\n  const transform = getTransformStyles(effects, progress);\n  const opacity = getOpacityStyles(effects, progress);\n  el.style.transform = transform;\n  el.style.opacity = opacity;\n}\n\nexport function getOpacityStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number\n): string {\n  const scaledOpacity =\n    effects['opacity'] && scaleEffectByProgress(effects['opacity'], progress);\n\n  if (\n    typeof scaledOpacity === 'undefined' ||\n    typeof scaledOpacity.value === 'undefined' ||\n    typeof scaledOpacity.unit === 'undefined'\n  ) {\n    return '';\n  }\n\n  const styleStr = `${scaledOpacity.value}`;\n\n  return styleStr;\n}\n\nexport function getTransformStyles(\n  effects: ParallaxStartEndEffects,\n  progress: number\n): string {\n  const transform: string = TRANSFORM_EFFECTS.reduce((acc, key: string) => {\n    const scaledEffect =\n      // @ts-expect-error\n      effects[key] && scaleEffectByProgress(effects[key], progress);\n\n    if (\n      typeof scaledEffect === 'undefined' ||\n      typeof scaledEffect.value === 'undefined' ||\n      typeof scaledEffect.unit === 'undefined'\n    ) {\n      return acc;\n    }\n\n    const styleStr = `${key}(${scaledEffect.value}${scaledEffect.unit})`;\n\n    return acc + styleStr;\n  }, '');\n\n  return transform;\n}\n\n/**\n * Takes a parallax element and removes parallax offset styles.\n * @param {object} element\n */\nexport function resetStyles(element: Element) {\n  const el = element.el;\n  if (!el) return;\n  el.style.transform = '';\n  el.style.opacity = '';\n}\n","import { Rect, Scroll, View } from '..';\nimport { Limits } from '../classes/Limits';\n\nexport function createLimitsForRelativeElements(\n  rect: Rect,\n  view: View,\n  scroll: Scroll,\n  shouldAlwaysCompleteAnimation?: boolean\n): Limits {\n  let startY = rect.top - view.height;\n  let startX = rect.left - view.width;\n  let endY = rect.bottom;\n  let endX = rect.right;\n\n  // add scroll\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y;\n\n  if (shouldAlwaysCompleteAnimation) {\n    if (scroll.y + rect.top < view.height) {\n      startY = 0;\n    }\n    if (scroll.x + rect.left < view.width) {\n      startX = 0;\n    }\n    if (endY > view.scrollHeight - view.height) {\n      endY = view.scrollHeight - view.height;\n    }\n    if (endX > view.scrollWidth - view.width) {\n      endX = view.scrollWidth - view.width;\n    }\n  }\n\n  const limits = new Limits({\n    startX,\n    startY,\n    endX,\n    endY,\n  });\n\n  return limits;\n}\n","export function getTranslateScalar(\n  startTranslatePx: number,\n  endTranslatePx: number,\n  totalDist: number\n) {\n  const slow = endTranslatePx > startTranslatePx;\n\n  // calculating necessary scale to increase translations\n  const totalAbsOff =\n    (Math.abs(startTranslatePx) + Math.abs(endTranslatePx)) * (slow ? -1 : 1);\n  const totalDistTrue = totalDist + totalAbsOff;\n\n  // Determine multiple to scale by, only values greater than 1\n  const scale = Math.max(totalDist / totalDistTrue, 1);\n\n  return scale;\n}\n","import { ParsedValueEffect } from '..';\n\n/**\n * Return the start and end pixel values for an elements translations\n */\nexport function getStartEndValueInPx(\n  translate: ParsedValueEffect,\n  elementSize: number\n) {\n  let { start, end, unit } = translate;\n\n  if (unit === '%') {\n    const scale = elementSize / 100;\n    start = start * scale;\n    end = end * scale;\n  }\n\n  if (unit === 'vw') {\n    const startScale = start / 100;\n    const endScale = end / 100;\n    start = window.innerWidth * startScale;\n    end = window.innerWidth * endScale;\n  }\n\n  if (unit === 'vh') {\n    const startScale = start / 100;\n    const endScale = end / 100;\n    start = window.innerHeight * startScale;\n    end = window.innerHeight * endScale;\n  }\n\n  return {\n    start,\n    end,\n  };\n}\n","import { ParsedValueEffect } from '../types';\nimport { Rect } from '../classes/Rect';\nimport { View } from '../classes/View';\nimport { Limits } from '../classes/Limits';\nimport { Scroll } from '../classes/Scroll';\n\nimport { getTranslateScalar } from './getTranslateScalar';\nimport { getStartEndValueInPx } from './getStartEndValueInPx';\nimport { ParallaxStartEndEffects, ScrollAxis, ValidScrollAxis } from '../types';\n\nconst DEFAULT_VALUE: ParsedValueEffect = {\n  start: 0,\n  end: 0,\n  unit: '',\n};\n\nexport function createLimitsWithTranslationsForRelativeElements(\n  rect: Rect,\n  view: View,\n  effects: ParallaxStartEndEffects,\n  scroll: Scroll,\n  scrollAxis: ValidScrollAxis,\n  shouldAlwaysCompleteAnimation?: boolean\n): Limits {\n  // get start and end accounting for percent effects\n  const translateX: ParsedValueEffect = effects.translateX || DEFAULT_VALUE;\n  const translateY: ParsedValueEffect = effects.translateY || DEFAULT_VALUE;\n\n  const {\n    start: startTranslateXPx,\n    end: endTranslateXPx,\n  } = getStartEndValueInPx(translateX, rect.width);\n  const {\n    start: startTranslateYPx,\n    end: endTranslateYPx,\n  } = getStartEndValueInPx(translateY, rect.height);\n\n  // default starting values\n  let startY = rect.top - view.height;\n  let startX = rect.left - view.width;\n  let endY = rect.bottom;\n  let endX = rect.right;\n\n  let startMultiplierY = 1;\n  let endMultiplierY = 1;\n  if (scrollAxis === ScrollAxis.vertical) {\n    startMultiplierY = getTranslateScalar(\n      startTranslateYPx,\n      endTranslateYPx,\n      view.height + rect.height\n    );\n    endMultiplierY = startMultiplierY;\n  }\n  let startMultiplierX = 1;\n  let endMultiplierX = 1;\n  if (scrollAxis === ScrollAxis.horizontal) {\n    startMultiplierX = getTranslateScalar(\n      startTranslateXPx,\n      endTranslateXPx,\n      view.width + rect.width\n    );\n    endMultiplierX = startMultiplierX;\n  }\n\n  // Apply the scale to initial values\n  if (startTranslateYPx < 0) {\n    startY = startY + startTranslateYPx * startMultiplierY;\n  }\n  if (endTranslateYPx > 0) {\n    endY = endY + endTranslateYPx * endMultiplierY;\n  }\n  if (startTranslateXPx < 0) {\n    startX = startX + startTranslateXPx * startMultiplierX;\n  }\n  if (endTranslateXPx > 0) {\n    endX = endX + endTranslateXPx * endMultiplierX;\n  }\n\n  // add scroll\n  startX += scroll.x;\n  endX += scroll.x;\n  startY += scroll.y;\n  endY += scroll.y;\n\n  // NOTE: please refactor and isolate this :(\n  if (shouldAlwaysCompleteAnimation) {\n    const topBeginsInView = scroll.y + rect.top < view.height;\n    const leftBeginsInView = scroll.x + rect.left < view.width;\n    const bottomEndsInView =\n      scroll.y + rect.bottom > view.scrollHeight - view.height;\n    const rightEndsInView =\n      scroll.x + rect.right > view.scrollWidth - view.height;\n\n    if (topBeginsInView && bottomEndsInView) {\n      startMultiplierY = 1;\n      endMultiplierY = 1;\n      startY = 0;\n      endY = view.scrollHeight - view.height;\n    }\n    if (leftBeginsInView && rightEndsInView) {\n      startMultiplierX = 1;\n      endMultiplierX = 1;\n      startX = 0;\n      endX = view.scrollWidth - view.width;\n    }\n\n    if (!topBeginsInView && bottomEndsInView) {\n      startY = rect.top - view.height + scroll.y;\n      endY = view.scrollHeight - view.height;\n      const totalDist = endY - startY;\n      startMultiplierY = getTranslateScalar(\n        startTranslateYPx,\n        endTranslateYPx,\n        totalDist\n      );\n      endMultiplierY = 1;\n      if (startTranslateYPx < 0) {\n        startY = startY + startTranslateYPx * startMultiplierY;\n      }\n    }\n    if (!leftBeginsInView && rightEndsInView) {\n      startX = rect.left - view.width + scroll.x;\n      endX = view.scrollWidth - view.width;\n      const totalDist = endX - startX;\n      startMultiplierX = getTranslateScalar(\n        startTranslateXPx,\n        endTranslateXPx,\n        totalDist\n      );\n      endMultiplierX = 1;\n      if (startTranslateXPx < 0) {\n        startX = startX + startTranslateXPx * startMultiplierX;\n      }\n    }\n\n    if (topBeginsInView && !bottomEndsInView) {\n      startY = 0;\n      endY = rect.bottom + scroll.y;\n      const totalDist = endY - startY;\n      startMultiplierY = 1;\n      endMultiplierY = getTranslateScalar(\n        startTranslateYPx,\n        endTranslateYPx,\n        totalDist\n      );\n      if (endTranslateYPx > 0) {\n        endY = endY + endTranslateYPx * endMultiplierY;\n      }\n    }\n    if (leftBeginsInView && !rightEndsInView) {\n      startX = 0;\n      endX = rect.right + scroll.x;\n      const totalDist = endX - startX;\n      startMultiplierX = 1;\n      endMultiplierX = getTranslateScalar(\n        startTranslateXPx,\n        endTranslateXPx,\n        totalDist\n      );\n      if (endTranslateXPx > 0) {\n        endX = endX + endTranslateXPx * endMultiplierX;\n      }\n    }\n  }\n\n  const limits = new Limits({\n    startX,\n    startY,\n    endX,\n    endY,\n    startMultiplierX,\n    endMultiplierX,\n    startMultiplierY,\n    endMultiplierY,\n  });\n\n  return limits;\n}\n","import { ParsedValueEffect, ParallaxStartEndEffects } from '../types';\nimport { Limits } from '../classes/Limits';\n\nexport function scaleTranslateEffectsForSlowerScroll(\n  effects: ParallaxStartEndEffects,\n  limits: Limits\n): ParallaxStartEndEffects {\n  const effectsCopy = {\n    ...effects,\n  };\n\n  if (effectsCopy.translateX) {\n    effectsCopy.translateX = {\n      ...effects.translateX,\n      start: effectsCopy.translateX.start * limits.startMultiplierX,\n      end: effectsCopy.translateX.end * limits.endMultiplierX,\n    } as ParsedValueEffect;\n  }\n  if (effectsCopy.translateY) {\n    effectsCopy.translateY = {\n      ...effects.translateY,\n      start: effectsCopy.translateY.start * limits.startMultiplierY,\n      end: effectsCopy.translateY.end * limits.endMultiplierY,\n    } as ParsedValueEffect;\n  }\n\n  return effectsCopy;\n}\n","import { ScrollAxis, ValidScrollAxis } from '../types';\nimport { ParallaxElementConfig, ParallaxStartEndEffects } from '../types';\n\nexport function getShouldScaleTranslateEffects(\n  props: ParallaxElementConfig,\n  effects: ParallaxStartEndEffects,\n  scrollAxis: ValidScrollAxis\n): boolean {\n  if (\n    props.rootMargin ||\n    props.targetElement ||\n    props.shouldDisableScalingTranslations\n  ) {\n    return false;\n  }\n\n  if (\n    (!!effects.translateX && scrollAxis === ScrollAxis.horizontal) ||\n    (!!effects.translateY && scrollAxis === ScrollAxis.vertical)\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","export const clamp = (num: number, min: number, max: number) =>\n  Math.min(Math.max(num, min), max);\n","import bezier from 'bezier-easing';\nimport {\n  CreateElementOptions,\n  ParallaxElementConfig,\n  ParallaxStartEndEffects,\n  ScrollAxis,\n  ValidScrollAxis,\n  EasingParam,\n} from '../types';\nimport { createId } from '../utils/createId';\nimport { Rect } from './Rect';\nimport { View } from './View';\nimport { Scroll } from './Scroll';\nimport { Limits } from './Limits';\nimport { parseElementTransitionEffects } from '../helpers/parseElementTransitionEffects';\nimport { getProgressAmount } from '../helpers/getProgressAmount';\nimport { isElementInView } from '../helpers/isElementInView';\nimport {\n  resetStyles,\n  setElementStyles,\n  setWillChangeStyles,\n} from '../helpers/elementStyles';\nimport { createEasingFunction } from '../helpers/createEasingFunction';\nimport { createLimitsForRelativeElements } from '../helpers/createLimitsForRelativeElements';\nimport { createLimitsWithTranslationsForRelativeElements } from '../helpers/createLimitsWithTranslationsForRelativeElements';\nimport { scaleTranslateEffectsForSlowerScroll } from '../helpers/scaleTranslateEffectsForSlowerScroll';\nimport { getShouldScaleTranslateEffects } from '../helpers/getShouldScaleTranslateEffects';\nimport { clamp } from '../helpers/clamp';\n\ntype ElementConstructorOptions = CreateElementOptions & {\n  scrollAxis: ValidScrollAxis;\n};\n\nexport class Element {\n  el: HTMLElement;\n  props: ParallaxElementConfig;\n  scrollAxis: ValidScrollAxis;\n  id: number;\n  effects: ParallaxStartEndEffects;\n  isInView: boolean | null;\n  progress: number;\n  /* Optionally set if translate effect must be scaled */\n  scaledEffects?: ParallaxStartEndEffects;\n  rect?: Rect;\n  limits?: Limits;\n  easing?: bezier.EasingFunction;\n\n  constructor(options: ElementConstructorOptions) {\n    this.el = options.el;\n    this.props = options.props;\n    this.scrollAxis = options.scrollAxis;\n    this.id = createId();\n    this.effects = parseElementTransitionEffects(this.props, this.scrollAxis);\n    this.isInView = null;\n    this.progress = 0;\n\n    this._setElementEasing(options.props.easing);\n\n    setWillChangeStyles(options.el, this.effects);\n  }\n\n  updateProps(nextProps: ParallaxElementConfig) {\n    this.props = { ...this.props, ...nextProps };\n    this.effects = parseElementTransitionEffects(nextProps, this.scrollAxis);\n    this._setElementEasing(nextProps.easing);\n\n    return this;\n  }\n\n  setCachedAttributes(view: View, scroll: Scroll): Element {\n    // NOTE: Must reset styles before getting the rect, as it might impact the natural position\n    resetStyles(this);\n\n    this.rect = new Rect({\n      el: this.props.targetElement || this.el,\n      rootMargin: this.props.rootMargin,\n      view,\n    });\n\n    const shouldScaleTranslateEffects = getShouldScaleTranslateEffects(\n      this.props,\n      this.effects,\n      this.scrollAxis\n    );\n\n    if (\n      typeof this.props.startScroll === 'number' &&\n      typeof this.props.endScroll === 'number'\n    ) {\n      this.limits = new Limits({\n        startX: this.props.startScroll,\n        startY: this.props.startScroll,\n        endX: this.props.endScroll,\n        endY: this.props.endScroll,\n      });\n\n      // Undo the reset -- place it back at current position with styles\n      this._setElementStyles();\n\n      return this;\n    }\n\n    if (shouldScaleTranslateEffects) {\n      this.limits = createLimitsWithTranslationsForRelativeElements(\n        this.rect,\n        view,\n        this.effects,\n        scroll,\n        this.scrollAxis,\n        this.props.shouldAlwaysCompleteAnimation\n      );\n\n      this.scaledEffects = scaleTranslateEffectsForSlowerScroll(\n        this.effects,\n        this.limits\n      );\n    } else {\n      this.limits = createLimitsForRelativeElements(\n        this.rect,\n        view,\n        scroll,\n        this.props.shouldAlwaysCompleteAnimation\n      );\n    }\n\n    // Undo the reset -- place it back at current position with styles\n    this._setElementStyles();\n\n    return this;\n  }\n\n  _updateElementIsInView(nextIsInView: boolean) {\n    // NOTE: Check if this is the first change to make sure onExit isn't called\n    const isFirstChange = this.isInView === null;\n    if (nextIsInView !== this.isInView) {\n      if (nextIsInView) {\n        this.props.onEnter && this.props.onEnter(this);\n      } else if (!isFirstChange) {\n        this._setFinalProgress();\n        this._setElementStyles();\n        this.props.onExit && this.props.onExit(this);\n      }\n    }\n    this.isInView = nextIsInView;\n  }\n\n  _setFinalProgress() {\n    const finalProgress = clamp(Math.round(this.progress), 0, 1);\n    this._updateElementProgress(finalProgress);\n  }\n\n  _setElementStyles() {\n    if (this.props.disabled) return;\n    const effects = this.scaledEffects || this.effects;\n    setElementStyles(effects, this.progress, this.el);\n  }\n\n  _updateElementProgress(nextProgress: number) {\n    this.progress = nextProgress;\n    this.props.onProgressChange && this.props.onProgressChange(this.progress);\n    this.props.onChange && this.props.onChange(this);\n  }\n\n  _setElementEasing(easing?: EasingParam): void {\n    this.easing = createEasingFunction(easing);\n  }\n\n  updatePosition(scroll: Scroll): Element {\n    if (!this.limits) return this;\n\n    const isVertical = this.scrollAxis === ScrollAxis.vertical;\n    const isFirstChange = this.isInView === null;\n    // based on scroll axis\n    const start = isVertical ? this.limits.startY : this.limits.startX;\n    const end = isVertical ? this.limits.endY : this.limits.endX;\n    const total = isVertical ? this.limits.totalY : this.limits.totalX;\n    const s = isVertical ? scroll.y : scroll.x;\n\n    // check if in view\n    const nextIsInView = isElementInView(start, end, s);\n    this._updateElementIsInView(nextIsInView);\n\n    // set the progress if in view or this is the first change\n    if (nextIsInView) {\n      const nextProgress = getProgressAmount(start, total, s, this.easing);\n      this._updateElementProgress(nextProgress);\n      this._setElementStyles();\n    } else if (isFirstChange) {\n      // NOTE: this._updateElementProgress -- dont use this because it will trigger onChange\n      this.progress = clamp(\n        Math.round(getProgressAmount(start, total, s, this.easing)),\n        0,\n        1\n      );\n      this._setElementStyles();\n    }\n\n    return this;\n  }\n}\n","export type ViewSizeParams = {\n  width: number;\n  height: number;\n  scrollHeight: number;\n  scrollWidth: number;\n};\nexport class View {\n  scrollContainer: HTMLElement | undefined;\n  width: number;\n  height: number;\n  scrollHeight: number;\n  scrollWidth: number;\n\n  constructor(config: {\n    width: number;\n    height: number;\n    scrollHeight: number;\n    scrollWidth: number;\n    scrollContainer?: HTMLElement;\n  }) {\n    this.scrollContainer = config.scrollContainer;\n    this.width = config.width;\n    this.height = config.height;\n    this.scrollHeight = config.scrollHeight;\n    this.scrollWidth = config.scrollWidth;\n  }\n\n  hasChanged(params: ViewSizeParams) {\n    if (\n      params.width !== this.width ||\n      params.height !== this.height ||\n      params.scrollWidth !== this.scrollWidth ||\n      params.scrollHeight !== this.scrollHeight\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  setSize(params: ViewSizeParams) {\n    this.width = params.width;\n    this.height = params.height;\n    this.scrollHeight = params.scrollHeight;\n    this.scrollWidth = params.scrollWidth;\n    return this;\n  }\n}\n","export class Scroll {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.dx = 0;\n    this.dy = 0;\n  }\n\n  setScroll(x: number, y: number) {\n    this.dx = x - this.x;\n    this.dy = y - this.y;\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n}\n","export function testForPassiveScroll() {\n  let supportsPassiveOption = false;\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      get() {\n        supportsPassiveOption = true;\n        return true;\n      },\n    });\n    // @ts-expect-error\n    window.addEventListener('test', null, opts);\n    // @ts-expect-error\n    window.removeEventListener('test', null, opts);\n  } catch (e) {}\n  return supportsPassiveOption;\n}\n","import { resetStyles } from '../helpers/elementStyles';\nimport { View } from './View';\nimport { Scroll } from './Scroll';\nimport { Element } from './Element';\nimport { testForPassiveScroll } from '../utils/testForPassiveScroll';\nimport {\n  CreateElementOptions,\n  ParallaxControllerOptions,\n  ParallaxElementConfig,\n  ScrollAxis,\n  ValidScrollAxis,\n  ViewElement,\n} from '../types';\n\n/**\n * -------------------------------------------------------\n * Parallax Controller\n * -------------------------------------------------------\n *\n * The global controller for setting up and managing a scroll view of elements.\n *\n */\n\nexport class ParallaxController {\n  elements: Element[];\n  scrollAxis: ValidScrollAxis;\n  viewEl: ViewElement;\n  scroll: Scroll;\n  view: View;\n  _hasScrollContainer: boolean;\n  _ticking: boolean;\n  _supportsPassive: boolean;\n  _resizeObserver?: ResizeObserver;\n\n  /**\n   * Static method to instantiate the ParallaxController.\n   * @returns {Class} ParallaxController\n   */\n  static init(options: ParallaxControllerOptions): ParallaxController {\n    const hasWindow = typeof window !== 'undefined';\n\n    if (!hasWindow) {\n      throw new Error(\n        'Looks like ParallaxController.init() was called on the server. This method must be called on the client.'\n      );\n    }\n\n    return new ParallaxController(options);\n  }\n\n  constructor({\n    scrollAxis = ScrollAxis.vertical,\n    scrollContainer,\n  }: ParallaxControllerOptions) {\n    this.scrollAxis = scrollAxis;\n    // All parallax elements to be updated\n    this.elements = [];\n\n    this._hasScrollContainer = !!scrollContainer;\n    this.viewEl = scrollContainer ?? window;\n\n    // Scroll and View\n    const [x, y] = this._getScrollPosition();\n    this.scroll = new Scroll(x, y);\n\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: this._hasScrollContainer ? scrollContainer : undefined,\n    });\n\n    // Ticking\n    this._ticking = false;\n\n    // Passive support\n    this._supportsPassive = testForPassiveScroll();\n\n    // Bind methods to class\n    this._bindAllMethods();\n    this._addListeners(this.viewEl);\n    this._addResizeObserver();\n    this._setViewSize();\n  }\n\n  _bindAllMethods() {\n    [\n      '_addListeners',\n      '_removeListeners',\n      '_getScrollPosition',\n      '_handleScroll',\n      '_handleUpdateCache',\n      '_updateAllElements',\n      '_updateElementPosition',\n      '_setViewSize',\n      '_addResizeObserver',\n      '_checkIfViewHasChanged',\n      '_getViewParams',\n      'getElements',\n      'createElement',\n      'removeElementById',\n      'resetElementStyles',\n      'updateElementPropsById',\n      'update',\n      'updateScrollContainer',\n      'destroy',\n    ].forEach((method: string) => {\n      // @ts-expect-error\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  _addListeners(el: ViewElement) {\n    el.addEventListener(\n      'scroll',\n      this._handleScroll,\n      this._supportsPassive ? { passive: true } : false\n    );\n    window.addEventListener('resize', this._handleUpdateCache, false);\n    window.addEventListener('blur', this._handleUpdateCache, false);\n    window.addEventListener('focus', this._handleUpdateCache, false);\n    window.addEventListener('load', this._handleUpdateCache, false);\n  }\n\n  _removeListeners(el: ViewElement) {\n    el.removeEventListener('scroll', this._handleScroll, false);\n    window.removeEventListener('resize', this._handleUpdateCache, false);\n    window.removeEventListener('blur', this._handleUpdateCache, false);\n    window.removeEventListener('focus', this._handleUpdateCache, false);\n    window.removeEventListener('load', this._handleUpdateCache, false);\n    this._resizeObserver?.disconnect();\n  }\n\n  _addResizeObserver() {\n    try {\n      const observedEl: HTMLElement = this._hasScrollContainer\n        ? (this.viewEl as HTMLElement)\n        : document.documentElement;\n      this._resizeObserver = new ResizeObserver(() => this.update());\n      this._resizeObserver.observe(observedEl);\n    } catch (e) {\n      console.warn(\n        'Failed to create the resize observer in the ParallaxContoller'\n      );\n    }\n  }\n\n  _getScrollPosition() {\n    // Save current scroll\n    // Supports IE 9 and up.\n    const nx = this._hasScrollContainer\n      ? // @ts-expect-error\n        this.viewEl.scrollLeft\n      : window.pageXOffset;\n    const ny = this._hasScrollContainer\n      ? // @ts-expect-error\n        this.viewEl.scrollTop\n      : window.pageYOffset;\n\n    return [nx, ny];\n  }\n\n  /**\n   * Window scroll handler sets scroll position\n   * and then calls '_updateAllElements()'.\n   */\n  _handleScroll() {\n    const [nx, ny] = this._getScrollPosition();\n    this.scroll.setScroll(nx, ny);\n\n    // Only called if the last animation request has been\n    // completed and there are parallax elements to update\n    if (!this._ticking && this.elements.length > 0) {\n      this._ticking = true;\n      // @ts-ignore\n      window.requestAnimationFrame(this._updateAllElements);\n    }\n  }\n\n  /**\n   * Window resize handler. Sets the new window inner height\n   * then updates parallax element attributes and positions.\n   */\n  _handleUpdateCache() {\n    this._setViewSize();\n    this._updateAllElements({ updateCache: true });\n  }\n\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n  _updateAllElements({ updateCache }: { updateCache?: boolean } = {}) {\n    if (this.elements) {\n      this.elements.forEach(element => {\n        if (updateCache) {\n          element.setCachedAttributes(this.view, this.scroll);\n        }\n        this._updateElementPosition(element);\n      });\n    }\n    // reset ticking so more animations can be called\n    this._ticking = false;\n  }\n\n  /**\n   * Update element positions.\n   * Determines if the element is in view based on the cached\n   * attributes, if so set the elements parallax styles.\n   */\n  _updateElementPosition(element: Element) {\n    if (element.props.disabled) return;\n    element.updatePosition(this.scroll);\n  }\n\n  /**\n   * Gets the params to set in the View from the scroll container or the window\n   */\n  _getViewParams(): {\n    width: number;\n    height: number;\n    scrollHeight: number;\n    scrollWidth: number;\n  } {\n    if (this._hasScrollContainer) {\n      // @ts-expect-error\n      const width = this.viewEl.offsetWidth;\n      // @ts-expect-error\n      const height = this.viewEl.offsetHeight;\n      // @ts-expect-error\n      const scrollHeight = this.viewEl.scrollHeight;\n      // @ts-expect-error\n      const scrollWidth = this.viewEl.scrollWidth;\n      return this.view.setSize({\n        width,\n        height,\n        scrollHeight,\n        scrollWidth,\n      });\n    }\n\n    const html = document.documentElement;\n    const width = window.innerWidth || html.clientWidth;\n    const height = window.innerHeight || html.clientHeight;\n    const scrollHeight = html.scrollHeight;\n    const scrollWidth = html.scrollWidth;\n\n    return { width, height, scrollHeight, scrollWidth };\n  }\n\n  /**\n   * Cache the view attributes\n   */\n  _setViewSize() {\n    return this.view.setSize(this._getViewParams());\n  }\n\n  /**\n   * Checks if any of the cached attributes of the view have changed.\n   * @returns boolean\n   */\n  _checkIfViewHasChanged() {\n    return this.view.hasChanged(this._getViewParams());\n  }\n\n  /**\n   * -------------------------------------------------------\n   * Public methods\n   * -------------------------------------------------------\n   */\n\n  /**\n   * Returns all the parallax elements in the controller\n   */\n  getElements(): Element[] {\n    return this.elements;\n  }\n\n  /**\n   * Creates and returns new parallax element with provided options to be managed by the controller.\n   */\n  createElement(options: CreateElementOptions): Element {\n    const newElement = new Element({\n      ...options,\n      scrollAxis: this.scrollAxis,\n    });\n    newElement.setCachedAttributes(this.view, this.scroll);\n    this.elements = this.elements\n      ? [...this.elements, newElement]\n      : [newElement];\n    this._updateElementPosition(newElement);\n\n    // NOTE: This checks if the view has changed then update the controller and all elements if it has\n    // This shouldn't always be necessary with a resize observer watching the view element\n    // but there seems to be cases where the resize observer does not catch and update.\n    if (this._checkIfViewHasChanged()) {\n      this.update();\n    }\n    return newElement;\n  }\n\n  /**\n   * Remove an element by id\n   */\n  removeElementById(id: number) {\n    if (!this.elements) return;\n    this.elements = this.elements.filter(el => el.id !== id);\n  }\n\n  /**\n   * Updates an existing parallax element object with new options.\n   */\n  updateElementPropsById(id: number, props: ParallaxElementConfig): void {\n    if (this.elements) {\n      this.elements = this.elements.map(el => {\n        if (el.id === id) {\n          return el.updateProps(props);\n        }\n        return el;\n      });\n    }\n\n    this.update();\n  }\n\n  /**\n   * Remove a target elements parallax styles\n   */\n  resetElementStyles(element: Element) {\n    resetStyles(element);\n  }\n\n  /**\n   * Updates all cached attributes on parallax elements.\n   */\n  update() {\n    // Save the latest scroll position because window.scroll\n    // may be called and the handle scroll event may not be called.\n    const [nx, ny] = this._getScrollPosition();\n    this.scroll.setScroll(nx, ny);\n\n    this._setViewSize();\n    this._updateAllElements({ updateCache: true });\n  }\n  /**\n   * Updates the scroll container of the parallax controller\n   */\n  updateScrollContainer(el: HTMLElement) {\n    // remove existing listeners with current el first\n    this._removeListeners(this.viewEl);\n\n    this.viewEl = el;\n    this._hasScrollContainer = !!el;\n    this.view = new View({\n      width: 0,\n      height: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      scrollContainer: el,\n    });\n    this._setViewSize();\n    this._addListeners(this.viewEl);\n    this._updateAllElements({ updateCache: true });\n  }\n\n  /**\n   * Disable all parallax elements\n   */\n  disableAllElements() {\n    if (this.elements) {\n      this.elements = this.elements.map(el => {\n        return el.updateProps({ disabled: true });\n      });\n    }\n    this.update();\n  }\n\n  /**\n   * Enable all parallax elements\n   */\n  enableAllElements() {\n    if (this.elements) {\n      this.elements = this.elements.map(el => {\n        return el.updateProps({ disabled: false });\n      });\n    }\n    this.update();\n  }\n\n  /**\n   * Removes all listeners and resets all styles on managed elements.\n   */\n  destroy() {\n    this._removeListeners(this.viewEl);\n    if (this.elements) {\n      this.elements.forEach(element => resetStyles(element));\n    }\n    // @ts-expect-error\n    this.elements = undefined;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}